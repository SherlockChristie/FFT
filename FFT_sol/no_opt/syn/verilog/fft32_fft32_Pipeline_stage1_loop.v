// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fft32_fft32_Pipeline_stage1_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stage0_real_address0,
        stage0_real_ce0,
        stage0_real_we0,
        stage0_real_d0,
        stage0_real_q0,
        stage0_real_address1,
        stage0_real_ce1,
        stage0_real_we1,
        stage0_real_d1,
        stage0_real_q1,
        stage0_imag_address0,
        stage0_imag_ce0,
        stage0_imag_we0,
        stage0_imag_d0,
        stage0_imag_q0,
        stage0_imag_address1,
        stage0_imag_ce1,
        stage0_imag_we1,
        stage0_imag_d1,
        stage0_imag_q1,
        stage1_real_address0,
        stage1_real_ce0,
        stage1_real_we0,
        stage1_real_d0,
        stage1_real_address1,
        stage1_real_ce1,
        stage1_real_we1,
        stage1_real_d1,
        stage1_imag_address0,
        stage1_imag_ce0,
        stage1_imag_we0,
        stage1_imag_d0,
        stage1_imag_address1,
        stage1_imag_ce1,
        stage1_imag_we1,
        stage1_imag_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] stage0_real_address0;
output   stage0_real_ce0;
output   stage0_real_we0;
output  [15:0] stage0_real_d0;
input  [15:0] stage0_real_q0;
output  [4:0] stage0_real_address1;
output   stage0_real_ce1;
output   stage0_real_we1;
output  [15:0] stage0_real_d1;
input  [15:0] stage0_real_q1;
output  [4:0] stage0_imag_address0;
output   stage0_imag_ce0;
output   stage0_imag_we0;
output  [15:0] stage0_imag_d0;
input  [15:0] stage0_imag_q0;
output  [4:0] stage0_imag_address1;
output   stage0_imag_ce1;
output   stage0_imag_we1;
output  [15:0] stage0_imag_d1;
input  [15:0] stage0_imag_q1;
output  [4:0] stage1_real_address0;
output   stage1_real_ce0;
output   stage1_real_we0;
output  [15:0] stage1_real_d0;
output  [4:0] stage1_real_address1;
output   stage1_real_ce1;
output   stage1_real_we1;
output  [15:0] stage1_real_d1;
output  [4:0] stage1_imag_address0;
output   stage1_imag_ce0;
output   stage1_imag_we0;
output  [15:0] stage1_imag_d0;
output  [4:0] stage1_imag_address1;
output   stage1_imag_ce1;
output   stage1_imag_we1;
output  [15:0] stage1_imag_d1;

reg ap_idle;
reg[4:0] stage0_real_address0;
reg stage0_real_ce0;
reg stage0_real_we0;
reg[15:0] stage0_real_d0;
reg[4:0] stage0_real_address1;
reg stage0_real_ce1;
reg stage0_real_we1;
reg[15:0] stage0_real_d1;
reg[4:0] stage0_imag_address0;
reg stage0_imag_ce0;
reg stage0_imag_we0;
reg[15:0] stage0_imag_d0;
reg[4:0] stage0_imag_address1;
reg stage0_imag_ce1;
reg stage0_imag_we1;
reg[15:0] stage0_imag_d1;
reg[4:0] stage1_real_address0;
reg stage1_real_ce0;
reg stage1_real_we0;
reg[15:0] stage1_real_d0;
reg[4:0] stage1_real_address1;
reg stage1_real_ce1;
reg stage1_real_we1;
reg[15:0] stage1_real_d1;
reg[4:0] stage1_imag_address0;
reg stage1_imag_ce0;
reg stage1_imag_we0;
reg[15:0] stage1_imag_d0;
reg[4:0] stage1_imag_address1;
reg stage1_imag_ce1;
reg stage1_imag_we1;
reg[15:0] stage1_imag_d1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln93_reg_384;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_subdone;
wire   [0:0] icmp_ln93_fu_220_p2;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] shl_ln_fu_236_p3;
reg   [4:0] shl_ln_reg_388;
wire   [63:0] zext_ln96_fu_244_p1;
reg   [63:0] zext_ln96_reg_394;
reg   [4:0] a_real_reg_400;
reg   [4:0] a_imag_reg_405;
wire   [63:0] zext_ln96_1_fu_256_p1;
reg   [63:0] zext_ln96_1_reg_410;
reg   [4:0] b_real_reg_416;
reg   [4:0] b_imag_reg_421;
wire   [63:0] zext_ln96_2_fu_272_p1;
reg   [63:0] zext_ln96_2_reg_426;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [4:0] c_real_reg_432;
reg   [4:0] c_real_reg_432_pp0_iter1_reg;
reg   [4:0] c_imag_reg_437;
reg   [4:0] c_imag_reg_437_pp0_iter1_reg;
wire   [63:0] zext_ln96_3_fu_283_p1;
reg   [63:0] zext_ln96_3_reg_442;
reg   [4:0] d_real_reg_448;
reg   [4:0] d_real_reg_448_pp0_iter1_reg;
reg   [4:0] d_imag_reg_453;
reg   [4:0] d_imag_reg_453_pp0_iter1_reg;
reg   [15:0] ar_reg_458;
reg   [15:0] ai_reg_464;
reg   [15:0] br_reg_470;
reg   [15:0] bi_reg_476;
reg   [15:0] cr_reg_482;
wire    ap_block_pp0_stage2_11001;
reg   [15:0] ci_reg_488;
reg   [15:0] dr_reg_494;
reg   [15:0] di_reg_500;
wire   [15:0] sub_ln36_fu_353_p2;
reg   [15:0] sub_ln36_reg_506;
wire    ap_block_pp0_stage3_11001;
wire   [15:0] sub_ln36_1_fu_359_p2;
reg   [15:0] sub_ln36_1_reg_512;
wire   [15:0] sub_ln37_fu_365_p2;
reg   [15:0] sub_ln37_reg_518;
wire   [15:0] add_ln37_fu_371_p2;
reg   [15:0] add_ln37_reg_524;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage3;
reg   [3:0] block_fu_44;
wire   [3:0] add_ln93_fu_226_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_block_1;
wire   [15:0] add_ln34_fu_321_p2;
wire   [15:0] add_ln35_fu_337_p2;
wire    ap_block_pp0_stage2;
wire   [15:0] add_ln34_1_fu_329_p2;
wire   [15:0] sub_ln35_fu_345_p2;
wire   [2:0] trunc_ln95_fu_232_p1;
wire   [4:0] or_ln96_fu_250_p2;
wire   [4:0] or_ln96_1_fu_267_p2;
wire   [4:0] or_ln96_2_fu_278_p2;
wire   [15:0] cr0_fu_305_p2;
wire   [15:0] ar0_fu_289_p2;
wire   [15:0] ci0_fu_309_p2;
wire   [15:0] ai0_fu_293_p2;
wire   [15:0] ci1_fu_317_p2;
wire   [15:0] ar1_fu_297_p2;
wire   [15:0] ai1_fu_301_p2;
wire   [15:0] cr1_fu_313_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

fft32_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln93_fu_220_p2 == 1'd0))) begin
            block_fu_44 <= add_ln93_fu_226_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            block_fu_44 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln93_fu_220_p2 == 1'd0))) begin
        a_imag_reg_405[4 : 2] <= zext_ln96_fu_244_p1[4 : 2];
        a_real_reg_400[4 : 2] <= zext_ln96_fu_244_p1[4 : 2];
        b_imag_reg_421[4 : 2] <= zext_ln96_1_fu_256_p1[4 : 2];
        b_real_reg_416[4 : 2] <= zext_ln96_1_fu_256_p1[4 : 2];
        shl_ln_reg_388[4 : 2] <= shl_ln_fu_236_p3[4 : 2];
        zext_ln96_1_reg_410[4 : 2] <= zext_ln96_1_fu_256_p1[4 : 2];
        zext_ln96_reg_394[4 : 2] <= zext_ln96_fu_244_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln93_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln37_reg_524 <= add_ln37_fu_371_p2;
        sub_ln36_1_reg_512 <= sub_ln36_1_fu_359_p2;
        sub_ln36_reg_506 <= sub_ln36_fu_353_p2;
        sub_ln37_reg_518 <= sub_ln37_fu_365_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln93_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ai_reg_464 <= stage0_imag_q1;
        ar_reg_458 <= stage0_real_q1;
        bi_reg_476 <= stage0_imag_q0;
        br_reg_470 <= stage0_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln93_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        c_imag_reg_437[4 : 2] <= zext_ln96_2_fu_272_p1[4 : 2];
        c_real_reg_432[4 : 2] <= zext_ln96_2_fu_272_p1[4 : 2];
        d_imag_reg_453[4 : 2] <= zext_ln96_3_fu_283_p1[4 : 2];
        d_real_reg_448[4 : 2] <= zext_ln96_3_fu_283_p1[4 : 2];
        zext_ln96_2_reg_426[4 : 2] <= zext_ln96_2_fu_272_p1[4 : 2];
        zext_ln96_3_reg_442[4 : 2] <= zext_ln96_3_fu_283_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        c_imag_reg_437_pp0_iter1_reg[4 : 2] <= c_imag_reg_437[4 : 2];
        c_real_reg_432_pp0_iter1_reg[4 : 2] <= c_real_reg_432[4 : 2];
        d_imag_reg_453_pp0_iter1_reg[4 : 2] <= d_imag_reg_453[4 : 2];
        d_real_reg_448_pp0_iter1_reg[4 : 2] <= d_real_reg_448[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln93_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ci_reg_488 <= stage0_imag_q1;
        cr_reg_482 <= stage0_real_q1;
        di_reg_500 <= stage0_imag_q0;
        dr_reg_494 <= stage0_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln93_reg_384 <= icmp_ln93_fu_220_p2;
    end
end

always @ (*) begin
    if (((icmp_ln93_reg_384 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_block_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_block_1 = block_fu_44;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        stage0_imag_address0 = d_imag_reg_453_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage0_imag_address0 = b_imag_reg_421;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_imag_address0 = zext_ln96_3_fu_283_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_imag_address0 = zext_ln96_1_fu_256_p1;
    end else begin
        stage0_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        stage0_imag_address1 = c_imag_reg_437_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage0_imag_address1 = a_imag_reg_405;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_imag_address1 = zext_ln96_2_fu_272_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_imag_address1 = zext_ln96_fu_244_p1;
    end else begin
        stage0_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stage0_imag_ce0 = 1'b1;
    end else begin
        stage0_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stage0_imag_ce1 = 1'b1;
    end else begin
        stage0_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        stage0_imag_d0 = add_ln37_reg_524;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage0_imag_d0 = sub_ln35_fu_345_p2;
    end else begin
        stage0_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        stage0_imag_d1 = sub_ln36_1_reg_512;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage0_imag_d1 = add_ln34_1_fu_329_p2;
    end else begin
        stage0_imag_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln93_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        stage0_imag_we0 = 1'b1;
    end else begin
        stage0_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln93_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        stage0_imag_we1 = 1'b1;
    end else begin
        stage0_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        stage0_real_address0 = d_real_reg_448_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage0_real_address0 = b_real_reg_416;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_real_address0 = zext_ln96_3_fu_283_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_real_address0 = zext_ln96_1_fu_256_p1;
    end else begin
        stage0_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        stage0_real_address1 = c_real_reg_432_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage0_real_address1 = a_real_reg_400;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_real_address1 = zext_ln96_2_fu_272_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_real_address1 = zext_ln96_fu_244_p1;
    end else begin
        stage0_real_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stage0_real_ce0 = 1'b1;
    end else begin
        stage0_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stage0_real_ce1 = 1'b1;
    end else begin
        stage0_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        stage0_real_d0 = sub_ln37_reg_518;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage0_real_d0 = add_ln35_fu_337_p2;
    end else begin
        stage0_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        stage0_real_d1 = sub_ln36_reg_506;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage0_real_d1 = add_ln34_fu_321_p2;
    end else begin
        stage0_real_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln93_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        stage0_real_we0 = 1'b1;
    end else begin
        stage0_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln93_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        stage0_real_we1 = 1'b1;
    end else begin
        stage0_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_imag_address0 = zext_ln96_3_reg_442;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage1_imag_address0 = zext_ln96_1_reg_410;
    end else begin
        stage1_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_imag_address1 = zext_ln96_2_reg_426;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage1_imag_address1 = zext_ln96_reg_394;
    end else begin
        stage1_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stage1_imag_ce0 = 1'b1;
    end else begin
        stage1_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stage1_imag_ce1 = 1'b1;
    end else begin
        stage1_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_imag_d0 = add_ln37_reg_524;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage1_imag_d0 = sub_ln35_fu_345_p2;
    end else begin
        stage1_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_imag_d1 = sub_ln36_1_reg_512;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage1_imag_d1 = add_ln34_1_fu_329_p2;
    end else begin
        stage1_imag_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln93_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stage1_imag_we0 = 1'b1;
    end else begin
        stage1_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln93_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stage1_imag_we1 = 1'b1;
    end else begin
        stage1_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_real_address0 = zext_ln96_3_reg_442;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage1_real_address0 = zext_ln96_1_reg_410;
    end else begin
        stage1_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_real_address1 = zext_ln96_2_reg_426;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage1_real_address1 = zext_ln96_reg_394;
    end else begin
        stage1_real_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stage1_real_ce0 = 1'b1;
    end else begin
        stage1_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stage1_real_ce1 = 1'b1;
    end else begin
        stage1_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_real_d0 = sub_ln37_reg_518;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage1_real_d0 = add_ln35_fu_337_p2;
    end else begin
        stage1_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_real_d1 = sub_ln36_reg_506;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        stage1_real_d1 = add_ln34_fu_321_p2;
    end else begin
        stage1_real_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln93_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stage1_real_we0 = 1'b1;
    end else begin
        stage1_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln93_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stage1_real_we1 = 1'b1;
    end else begin
        stage1_real_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln34_1_fu_329_p2 = (ci0_fu_309_p2 + ai0_fu_293_p2);

assign add_ln34_fu_321_p2 = (cr0_fu_305_p2 + ar0_fu_289_p2);

assign add_ln35_fu_337_p2 = (ci1_fu_317_p2 + ar1_fu_297_p2);

assign add_ln37_fu_371_p2 = (cr1_fu_313_p2 + ai1_fu_301_p2);

assign add_ln93_fu_226_p2 = (ap_sig_allocacmp_block_1 + 4'd1);

assign ai0_fu_293_p2 = (bi_reg_476 + ai_reg_464);

assign ai1_fu_301_p2 = (ai_reg_464 - bi_reg_476);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ar0_fu_289_p2 = (br_reg_470 + ar_reg_458);

assign ar1_fu_297_p2 = (ar_reg_458 - br_reg_470);

assign ci0_fu_309_p2 = (di_reg_500 + ci_reg_488);

assign ci1_fu_317_p2 = (ci_reg_488 - di_reg_500);

assign cr0_fu_305_p2 = (dr_reg_494 + cr_reg_482);

assign cr1_fu_313_p2 = (cr_reg_482 - dr_reg_494);

assign icmp_ln93_fu_220_p2 = ((ap_sig_allocacmp_block_1 == 4'd8) ? 1'b1 : 1'b0);

assign or_ln96_1_fu_267_p2 = (shl_ln_reg_388 | 5'd2);

assign or_ln96_2_fu_278_p2 = (shl_ln_reg_388 | 5'd3);

assign or_ln96_fu_250_p2 = (shl_ln_fu_236_p3 | 5'd1);

assign shl_ln_fu_236_p3 = {{trunc_ln95_fu_232_p1}, {2'd0}};

assign sub_ln35_fu_345_p2 = (ai1_fu_301_p2 - cr1_fu_313_p2);

assign sub_ln36_1_fu_359_p2 = (ai0_fu_293_p2 - ci0_fu_309_p2);

assign sub_ln36_fu_353_p2 = (ar0_fu_289_p2 - cr0_fu_305_p2);

assign sub_ln37_fu_365_p2 = (ar1_fu_297_p2 - ci1_fu_317_p2);

assign trunc_ln95_fu_232_p1 = ap_sig_allocacmp_block_1[2:0];

assign zext_ln96_1_fu_256_p1 = or_ln96_fu_250_p2;

assign zext_ln96_2_fu_272_p1 = or_ln96_1_fu_267_p2;

assign zext_ln96_3_fu_283_p1 = or_ln96_2_fu_278_p2;

assign zext_ln96_fu_244_p1 = shl_ln_fu_236_p3;

always @ (posedge ap_clk) begin
    shl_ln_reg_388[1:0] <= 2'b00;
    zext_ln96_reg_394[1:0] <= 2'b00;
    zext_ln96_reg_394[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    a_real_reg_400[1:0] <= 2'b00;
    a_imag_reg_405[1:0] <= 2'b00;
    zext_ln96_1_reg_410[1:0] <= 2'b01;
    zext_ln96_1_reg_410[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    b_real_reg_416[1:0] <= 2'b01;
    b_imag_reg_421[1:0] <= 2'b01;
    zext_ln96_2_reg_426[1:0] <= 2'b10;
    zext_ln96_2_reg_426[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    c_real_reg_432[1:0] <= 2'b10;
    c_real_reg_432_pp0_iter1_reg[1:0] <= 2'b10;
    c_imag_reg_437[1:0] <= 2'b10;
    c_imag_reg_437_pp0_iter1_reg[1:0] <= 2'b10;
    zext_ln96_3_reg_442[1:0] <= 2'b11;
    zext_ln96_3_reg_442[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    d_real_reg_448[1:0] <= 2'b11;
    d_real_reg_448_pp0_iter1_reg[1:0] <= 2'b11;
    d_imag_reg_453[1:0] <= 2'b11;
    d_imag_reg_453_pp0_iter1_reg[1:0] <= 2'b11;
end

endmodule //fft32_fft32_Pipeline_stage1_loop
