-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft32_fft32_Pipeline_stage1_loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stage0_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    stage0_real_ce0 : OUT STD_LOGIC;
    stage0_real_we0 : OUT STD_LOGIC;
    stage0_real_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    stage0_real_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    stage0_real_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    stage0_real_ce1 : OUT STD_LOGIC;
    stage0_real_we1 : OUT STD_LOGIC;
    stage0_real_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    stage0_real_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    stage0_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    stage0_imag_ce0 : OUT STD_LOGIC;
    stage0_imag_we0 : OUT STD_LOGIC;
    stage0_imag_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    stage0_imag_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    stage0_imag_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    stage0_imag_ce1 : OUT STD_LOGIC;
    stage0_imag_we1 : OUT STD_LOGIC;
    stage0_imag_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    stage0_imag_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    stage1_real_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    stage1_real_ce0 : OUT STD_LOGIC;
    stage1_real_we0 : OUT STD_LOGIC;
    stage1_real_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    stage1_real_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    stage1_real_ce1 : OUT STD_LOGIC;
    stage1_real_we1 : OUT STD_LOGIC;
    stage1_real_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    stage1_imag_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    stage1_imag_ce0 : OUT STD_LOGIC;
    stage1_imag_we0 : OUT STD_LOGIC;
    stage1_imag_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    stage1_imag_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    stage1_imag_ce1 : OUT STD_LOGIC;
    stage1_imag_we1 : OUT STD_LOGIC;
    stage1_imag_d1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of fft32_fft32_Pipeline_stage1_loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal icmp_ln93_reg_384 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal icmp_ln93_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal shl_ln_fu_236_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln_reg_388 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln96_fu_244_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln96_reg_394 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_real_reg_400 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_imag_reg_405 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln96_1_fu_256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln96_1_reg_410 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_real_reg_416 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_imag_reg_421 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln96_2_fu_272_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln96_2_reg_426 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal c_real_reg_432 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_real_reg_432_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal c_imag_reg_437 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_imag_reg_437_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln96_3_fu_283_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln96_3_reg_442 : STD_LOGIC_VECTOR (63 downto 0);
    signal d_real_reg_448 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_real_reg_448_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal d_imag_reg_453 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_imag_reg_453_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal ar_reg_458 : STD_LOGIC_VECTOR (15 downto 0);
    signal ai_reg_464 : STD_LOGIC_VECTOR (15 downto 0);
    signal br_reg_470 : STD_LOGIC_VECTOR (15 downto 0);
    signal bi_reg_476 : STD_LOGIC_VECTOR (15 downto 0);
    signal cr_reg_482 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ci_reg_488 : STD_LOGIC_VECTOR (15 downto 0);
    signal dr_reg_494 : STD_LOGIC_VECTOR (15 downto 0);
    signal di_reg_500 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln36_fu_353_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln36_reg_506 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal sub_ln36_1_fu_359_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln36_1_reg_512 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln37_fu_365_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln37_reg_518 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln37_fu_371_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln37_reg_524 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal block_fu_44 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln93_fu_226_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_block_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln34_fu_321_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln35_fu_337_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal add_ln34_1_fu_329_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln35_fu_345_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln95_fu_232_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln96_fu_250_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln96_1_fu_267_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln96_2_fu_278_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal cr0_fu_305_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ar0_fu_289_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ci0_fu_309_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ai0_fu_293_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ci1_fu_317_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ar1_fu_297_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ai1_fu_301_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cr1_fu_313_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fft32_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component fft32_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage2)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    block_fu_44_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln93_fu_220_p2 = ap_const_lv1_0))) then 
                    block_fu_44 <= add_ln93_fu_226_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    block_fu_44 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln93_fu_220_p2 = ap_const_lv1_0))) then
                    a_imag_reg_405(4 downto 2) <= zext_ln96_fu_244_p1(5 - 1 downto 0)(4 downto 2);
                    a_real_reg_400(4 downto 2) <= zext_ln96_fu_244_p1(5 - 1 downto 0)(4 downto 2);
                    b_imag_reg_421(4 downto 2) <= zext_ln96_1_fu_256_p1(5 - 1 downto 0)(4 downto 2);
                    b_real_reg_416(4 downto 2) <= zext_ln96_1_fu_256_p1(5 - 1 downto 0)(4 downto 2);
                    shl_ln_reg_388(4 downto 2) <= shl_ln_fu_236_p3(4 downto 2);
                    zext_ln96_1_reg_410(4 downto 2) <= zext_ln96_1_fu_256_p1(4 downto 2);
                    zext_ln96_reg_394(4 downto 2) <= zext_ln96_fu_244_p1(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_reg_384 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add_ln37_reg_524 <= add_ln37_fu_371_p2;
                sub_ln36_1_reg_512 <= sub_ln36_1_fu_359_p2;
                sub_ln36_reg_506 <= sub_ln36_fu_353_p2;
                sub_ln37_reg_518 <= sub_ln37_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_reg_384 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ai_reg_464 <= stage0_imag_q1;
                ar_reg_458 <= stage0_real_q1;
                bi_reg_476 <= stage0_imag_q0;
                br_reg_470 <= stage0_real_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_reg_384 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    c_imag_reg_437(4 downto 2) <= zext_ln96_2_fu_272_p1(5 - 1 downto 0)(4 downto 2);
                    c_real_reg_432(4 downto 2) <= zext_ln96_2_fu_272_p1(5 - 1 downto 0)(4 downto 2);
                    d_imag_reg_453(4 downto 2) <= zext_ln96_3_fu_283_p1(5 - 1 downto 0)(4 downto 2);
                    d_real_reg_448(4 downto 2) <= zext_ln96_3_fu_283_p1(5 - 1 downto 0)(4 downto 2);
                    zext_ln96_2_reg_426(4 downto 2) <= zext_ln96_2_fu_272_p1(4 downto 2);
                    zext_ln96_3_reg_442(4 downto 2) <= zext_ln96_3_fu_283_p1(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    c_imag_reg_437_pp0_iter1_reg(4 downto 2) <= c_imag_reg_437(4 downto 2);
                    c_real_reg_432_pp0_iter1_reg(4 downto 2) <= c_real_reg_432(4 downto 2);
                    d_imag_reg_453_pp0_iter1_reg(4 downto 2) <= d_imag_reg_453(4 downto 2);
                    d_real_reg_448_pp0_iter1_reg(4 downto 2) <= d_real_reg_448(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_reg_384 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                ci_reg_488 <= stage0_imag_q1;
                cr_reg_482 <= stage0_real_q1;
                di_reg_500 <= stage0_imag_q0;
                dr_reg_494 <= stage0_real_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln93_reg_384 <= icmp_ln93_fu_220_p2;
            end if;
        end if;
    end process;
    shl_ln_reg_388(1 downto 0) <= "00";
    zext_ln96_reg_394(1 downto 0) <= "00";
    zext_ln96_reg_394(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    a_real_reg_400(1 downto 0) <= "00";
    a_imag_reg_405(1 downto 0) <= "00";
    zext_ln96_1_reg_410(1 downto 0) <= "01";
    zext_ln96_1_reg_410(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    b_real_reg_416(1 downto 0) <= "01";
    b_imag_reg_421(1 downto 0) <= "01";
    zext_ln96_2_reg_426(1 downto 0) <= "10";
    zext_ln96_2_reg_426(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    c_real_reg_432(1 downto 0) <= "10";
    c_real_reg_432_pp0_iter1_reg(1 downto 0) <= "10";
    c_imag_reg_437(1 downto 0) <= "10";
    c_imag_reg_437_pp0_iter1_reg(1 downto 0) <= "10";
    zext_ln96_3_reg_442(1 downto 0) <= "11";
    zext_ln96_3_reg_442(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    d_real_reg_448(1 downto 0) <= "11";
    d_real_reg_448_pp0_iter1_reg(1 downto 0) <= "11";
    d_imag_reg_453(1 downto 0) <= "11";
    d_imag_reg_453_pp0_iter1_reg(1 downto 0) <= "11";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter0_stage2, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage2)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln34_1_fu_329_p2 <= std_logic_vector(unsigned(ci0_fu_309_p2) + unsigned(ai0_fu_293_p2));
    add_ln34_fu_321_p2 <= std_logic_vector(unsigned(cr0_fu_305_p2) + unsigned(ar0_fu_289_p2));
    add_ln35_fu_337_p2 <= std_logic_vector(unsigned(ci1_fu_317_p2) + unsigned(ar1_fu_297_p2));
    add_ln37_fu_371_p2 <= std_logic_vector(unsigned(cr1_fu_313_p2) + unsigned(ai1_fu_301_p2));
    add_ln93_fu_226_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_block_1) + unsigned(ap_const_lv4_1));
    ai0_fu_293_p2 <= std_logic_vector(unsigned(bi_reg_476) + unsigned(ai_reg_464));
    ai1_fu_301_p2 <= std_logic_vector(unsigned(ai_reg_464) - unsigned(bi_reg_476));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, icmp_ln93_reg_384)
    begin
        if (((icmp_ln93_reg_384 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_block_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, block_fu_44, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_block_1 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_block_1 <= block_fu_44;
        end if; 
    end process;

    ar0_fu_289_p2 <= std_logic_vector(unsigned(br_reg_470) + unsigned(ar_reg_458));
    ar1_fu_297_p2 <= std_logic_vector(unsigned(ar_reg_458) - unsigned(br_reg_470));
    ci0_fu_309_p2 <= std_logic_vector(unsigned(di_reg_500) + unsigned(ci_reg_488));
    ci1_fu_317_p2 <= std_logic_vector(unsigned(ci_reg_488) - unsigned(di_reg_500));
    cr0_fu_305_p2 <= std_logic_vector(unsigned(dr_reg_494) + unsigned(cr_reg_482));
    cr1_fu_313_p2 <= std_logic_vector(unsigned(cr_reg_482) - unsigned(dr_reg_494));
    icmp_ln93_fu_220_p2 <= "1" when (ap_sig_allocacmp_block_1 = ap_const_lv4_8) else "0";
    or_ln96_1_fu_267_p2 <= (shl_ln_reg_388 or ap_const_lv5_2);
    or_ln96_2_fu_278_p2 <= (shl_ln_reg_388 or ap_const_lv5_3);
    or_ln96_fu_250_p2 <= (shl_ln_fu_236_p3 or ap_const_lv5_1);
    shl_ln_fu_236_p3 <= (trunc_ln95_fu_232_p1 & ap_const_lv2_0);

    stage0_imag_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, zext_ln96_1_fu_256_p1, b_imag_reg_421, ap_CS_fsm_pp0_stage1, zext_ln96_3_fu_283_p1, d_imag_reg_453_pp0_iter1_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            stage0_imag_address0 <= d_imag_reg_453_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage0_imag_address0 <= b_imag_reg_421;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_imag_address0 <= zext_ln96_3_fu_283_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_imag_address0 <= zext_ln96_1_fu_256_p1(5 - 1 downto 0);
        else 
            stage0_imag_address0 <= "XXXXX";
        end if; 
    end process;


    stage0_imag_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, zext_ln96_fu_244_p1, a_imag_reg_405, zext_ln96_2_fu_272_p1, ap_CS_fsm_pp0_stage1, c_imag_reg_437_pp0_iter1_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            stage0_imag_address1 <= c_imag_reg_437_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage0_imag_address1 <= a_imag_reg_405;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_imag_address1 <= zext_ln96_2_fu_272_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_imag_address1 <= zext_ln96_fu_244_p1(5 - 1 downto 0);
        else 
            stage0_imag_address1 <= "XXXXX";
        end if; 
    end process;


    stage0_imag_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stage0_imag_ce0 <= ap_const_logic_1;
        else 
            stage0_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_imag_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stage0_imag_ce1 <= ap_const_logic_1;
        else 
            stage0_imag_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_imag_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, add_ln37_reg_524, ap_block_pp0_stage3, ap_block_pp0_stage2, sub_ln35_fu_345_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            stage0_imag_d0 <= add_ln37_reg_524;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage0_imag_d0 <= sub_ln35_fu_345_p2;
        else 
            stage0_imag_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_imag_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sub_ln36_1_reg_512, ap_block_pp0_stage3, ap_block_pp0_stage2, add_ln34_1_fu_329_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            stage0_imag_d1 <= sub_ln36_1_reg_512;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage0_imag_d1 <= add_ln34_1_fu_329_p2;
        else 
            stage0_imag_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_imag_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, icmp_ln93_reg_384, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln93_reg_384 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            stage0_imag_we0 <= ap_const_logic_1;
        else 
            stage0_imag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_imag_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, icmp_ln93_reg_384, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln93_reg_384 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            stage0_imag_we1 <= ap_const_logic_1;
        else 
            stage0_imag_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_real_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, zext_ln96_1_fu_256_p1, b_real_reg_416, ap_CS_fsm_pp0_stage1, zext_ln96_3_fu_283_p1, d_real_reg_448_pp0_iter1_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            stage0_real_address0 <= d_real_reg_448_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage0_real_address0 <= b_real_reg_416;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_real_address0 <= zext_ln96_3_fu_283_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_real_address0 <= zext_ln96_1_fu_256_p1(5 - 1 downto 0);
        else 
            stage0_real_address0 <= "XXXXX";
        end if; 
    end process;


    stage0_real_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, zext_ln96_fu_244_p1, a_real_reg_400, zext_ln96_2_fu_272_p1, ap_CS_fsm_pp0_stage1, c_real_reg_432_pp0_iter1_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            stage0_real_address1 <= c_real_reg_432_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage0_real_address1 <= a_real_reg_400;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_real_address1 <= zext_ln96_2_fu_272_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_real_address1 <= zext_ln96_fu_244_p1(5 - 1 downto 0);
        else 
            stage0_real_address1 <= "XXXXX";
        end if; 
    end process;


    stage0_real_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stage0_real_ce0 <= ap_const_logic_1;
        else 
            stage0_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_real_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stage0_real_ce1 <= ap_const_logic_1;
        else 
            stage0_real_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_real_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sub_ln37_reg_518, ap_block_pp0_stage3, add_ln35_fu_337_p2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            stage0_real_d0 <= sub_ln37_reg_518;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage0_real_d0 <= add_ln35_fu_337_p2;
        else 
            stage0_real_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_real_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sub_ln36_reg_506, ap_block_pp0_stage3, add_ln34_fu_321_p2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            stage0_real_d1 <= sub_ln36_reg_506;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage0_real_d1 <= add_ln34_fu_321_p2;
        else 
            stage0_real_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_real_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, icmp_ln93_reg_384, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln93_reg_384 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            stage0_real_we0 <= ap_const_logic_1;
        else 
            stage0_real_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_real_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, icmp_ln93_reg_384, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln93_reg_384 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            stage0_real_we1 <= ap_const_logic_1;
        else 
            stage0_real_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_imag_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, zext_ln96_1_reg_410, zext_ln96_3_reg_442, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_imag_address0 <= zext_ln96_3_reg_442(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage1_imag_address0 <= zext_ln96_1_reg_410(5 - 1 downto 0);
        else 
            stage1_imag_address0 <= "XXXXX";
        end if; 
    end process;


    stage1_imag_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, zext_ln96_reg_394, zext_ln96_2_reg_426, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_imag_address1 <= zext_ln96_2_reg_426(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage1_imag_address1 <= zext_ln96_reg_394(5 - 1 downto 0);
        else 
            stage1_imag_address1 <= "XXXXX";
        end if; 
    end process;


    stage1_imag_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stage1_imag_ce0 <= ap_const_logic_1;
        else 
            stage1_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_imag_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stage1_imag_ce1 <= ap_const_logic_1;
        else 
            stage1_imag_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_imag_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, add_ln37_reg_524, ap_block_pp0_stage0, ap_block_pp0_stage3, sub_ln35_fu_345_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_imag_d0 <= add_ln37_reg_524;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage1_imag_d0 <= sub_ln35_fu_345_p2;
        else 
            stage1_imag_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage1_imag_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, sub_ln36_1_reg_512, ap_block_pp0_stage0, ap_block_pp0_stage3, add_ln34_1_fu_329_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_imag_d1 <= sub_ln36_1_reg_512;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage1_imag_d1 <= add_ln34_1_fu_329_p2;
        else 
            stage1_imag_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage1_imag_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln93_reg_384, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((icmp_ln93_reg_384 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stage1_imag_we0 <= ap_const_logic_1;
        else 
            stage1_imag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_imag_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln93_reg_384, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((icmp_ln93_reg_384 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stage1_imag_we1 <= ap_const_logic_1;
        else 
            stage1_imag_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_real_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, zext_ln96_1_reg_410, zext_ln96_3_reg_442, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_real_address0 <= zext_ln96_3_reg_442(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage1_real_address0 <= zext_ln96_1_reg_410(5 - 1 downto 0);
        else 
            stage1_real_address0 <= "XXXXX";
        end if; 
    end process;


    stage1_real_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, zext_ln96_reg_394, zext_ln96_2_reg_426, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_real_address1 <= zext_ln96_2_reg_426(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage1_real_address1 <= zext_ln96_reg_394(5 - 1 downto 0);
        else 
            stage1_real_address1 <= "XXXXX";
        end if; 
    end process;


    stage1_real_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stage1_real_ce0 <= ap_const_logic_1;
        else 
            stage1_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_real_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stage1_real_ce1 <= ap_const_logic_1;
        else 
            stage1_real_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_real_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, sub_ln37_reg_518, ap_block_pp0_stage0, ap_block_pp0_stage3, add_ln35_fu_337_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_real_d0 <= sub_ln37_reg_518;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage1_real_d0 <= add_ln35_fu_337_p2;
        else 
            stage1_real_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage1_real_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, sub_ln36_reg_506, ap_block_pp0_stage0, ap_block_pp0_stage3, add_ln34_fu_321_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_real_d1 <= sub_ln36_reg_506;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            stage1_real_d1 <= add_ln34_fu_321_p2;
        else 
            stage1_real_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage1_real_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln93_reg_384, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((icmp_ln93_reg_384 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stage1_real_we0 <= ap_const_logic_1;
        else 
            stage1_real_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_real_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln93_reg_384, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((icmp_ln93_reg_384 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stage1_real_we1 <= ap_const_logic_1;
        else 
            stage1_real_we1 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln35_fu_345_p2 <= std_logic_vector(unsigned(ai1_fu_301_p2) - unsigned(cr1_fu_313_p2));
    sub_ln36_1_fu_359_p2 <= std_logic_vector(unsigned(ai0_fu_293_p2) - unsigned(ci0_fu_309_p2));
    sub_ln36_fu_353_p2 <= std_logic_vector(unsigned(ar0_fu_289_p2) - unsigned(cr0_fu_305_p2));
    sub_ln37_fu_365_p2 <= std_logic_vector(unsigned(ar1_fu_297_p2) - unsigned(ci1_fu_317_p2));
    trunc_ln95_fu_232_p1 <= ap_sig_allocacmp_block_1(3 - 1 downto 0);
    zext_ln96_1_fu_256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln96_fu_250_p2),64));
    zext_ln96_2_fu_272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln96_1_fu_267_p2),64));
    zext_ln96_3_fu_283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln96_2_fu_278_p2),64));
    zext_ln96_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_236_p3),64));
end behav;
