// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fft32_fft32_Pipeline_input_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_stream_TVALID,
        in_stream_TDATA,
        in_stream_TREADY,
        data_imag_31_out,
        data_imag_31_out_ap_vld,
        data_imag_30_out,
        data_imag_30_out_ap_vld,
        data_imag_29_out,
        data_imag_29_out_ap_vld,
        data_imag_28_out,
        data_imag_28_out_ap_vld,
        data_imag_27_out,
        data_imag_27_out_ap_vld,
        data_imag_26_out,
        data_imag_26_out_ap_vld,
        data_imag_25_out,
        data_imag_25_out_ap_vld,
        data_imag_24_out,
        data_imag_24_out_ap_vld,
        data_imag_23_out,
        data_imag_23_out_ap_vld,
        data_imag_22_out,
        data_imag_22_out_ap_vld,
        data_imag_21_out,
        data_imag_21_out_ap_vld,
        data_imag_20_out,
        data_imag_20_out_ap_vld,
        data_imag_19_out,
        data_imag_19_out_ap_vld,
        data_imag_18_out,
        data_imag_18_out_ap_vld,
        data_imag_17_out,
        data_imag_17_out_ap_vld,
        data_imag_16_out,
        data_imag_16_out_ap_vld,
        data_imag_15_out,
        data_imag_15_out_ap_vld,
        data_imag_14_out,
        data_imag_14_out_ap_vld,
        data_imag_13_out,
        data_imag_13_out_ap_vld,
        data_imag_12_out,
        data_imag_12_out_ap_vld,
        data_imag_11_out,
        data_imag_11_out_ap_vld,
        data_imag_10_out,
        data_imag_10_out_ap_vld,
        data_imag_9_out,
        data_imag_9_out_ap_vld,
        data_imag_8_out,
        data_imag_8_out_ap_vld,
        data_imag_7_out,
        data_imag_7_out_ap_vld,
        data_imag_6_out,
        data_imag_6_out_ap_vld,
        data_imag_5_out,
        data_imag_5_out_ap_vld,
        data_imag_4_out,
        data_imag_4_out_ap_vld,
        data_imag_3_out,
        data_imag_3_out_ap_vld,
        data_imag_2_out,
        data_imag_2_out_ap_vld,
        data_imag_1_out,
        data_imag_1_out_ap_vld,
        data_imag_out,
        data_imag_out_ap_vld,
        data_real_31_out,
        data_real_31_out_ap_vld,
        data_real_30_out,
        data_real_30_out_ap_vld,
        data_real_29_out,
        data_real_29_out_ap_vld,
        data_real_28_out,
        data_real_28_out_ap_vld,
        data_real_27_out,
        data_real_27_out_ap_vld,
        data_real_26_out,
        data_real_26_out_ap_vld,
        data_real_25_out,
        data_real_25_out_ap_vld,
        data_real_24_out,
        data_real_24_out_ap_vld,
        data_real_23_out,
        data_real_23_out_ap_vld,
        data_real_22_out,
        data_real_22_out_ap_vld,
        data_real_21_out,
        data_real_21_out_ap_vld,
        data_real_20_out,
        data_real_20_out_ap_vld,
        data_real_19_out,
        data_real_19_out_ap_vld,
        data_real_18_out,
        data_real_18_out_ap_vld,
        data_real_17_out,
        data_real_17_out_ap_vld,
        data_real_16_out,
        data_real_16_out_ap_vld,
        data_real_15_out,
        data_real_15_out_ap_vld,
        data_real_14_out,
        data_real_14_out_ap_vld,
        data_real_13_out,
        data_real_13_out_ap_vld,
        data_real_12_out,
        data_real_12_out_ap_vld,
        data_real_11_out,
        data_real_11_out_ap_vld,
        data_real_10_out,
        data_real_10_out_ap_vld,
        data_real_9_out,
        data_real_9_out_ap_vld,
        data_real_8_out,
        data_real_8_out_ap_vld,
        data_real_7_out,
        data_real_7_out_ap_vld,
        data_real_6_out,
        data_real_6_out_ap_vld,
        data_real_5_out,
        data_real_5_out_ap_vld,
        data_real_4_out,
        data_real_4_out_ap_vld,
        data_real_3_out,
        data_real_3_out_ap_vld,
        data_real_2_out,
        data_real_2_out_ap_vld,
        data_real_1_out,
        data_real_1_out_ap_vld,
        data_real_out,
        data_real_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in_stream_TVALID;
input  [47:0] in_stream_TDATA;
output   in_stream_TREADY;
output  [15:0] data_imag_31_out;
output   data_imag_31_out_ap_vld;
output  [15:0] data_imag_30_out;
output   data_imag_30_out_ap_vld;
output  [15:0] data_imag_29_out;
output   data_imag_29_out_ap_vld;
output  [15:0] data_imag_28_out;
output   data_imag_28_out_ap_vld;
output  [15:0] data_imag_27_out;
output   data_imag_27_out_ap_vld;
output  [15:0] data_imag_26_out;
output   data_imag_26_out_ap_vld;
output  [15:0] data_imag_25_out;
output   data_imag_25_out_ap_vld;
output  [15:0] data_imag_24_out;
output   data_imag_24_out_ap_vld;
output  [15:0] data_imag_23_out;
output   data_imag_23_out_ap_vld;
output  [15:0] data_imag_22_out;
output   data_imag_22_out_ap_vld;
output  [15:0] data_imag_21_out;
output   data_imag_21_out_ap_vld;
output  [15:0] data_imag_20_out;
output   data_imag_20_out_ap_vld;
output  [15:0] data_imag_19_out;
output   data_imag_19_out_ap_vld;
output  [15:0] data_imag_18_out;
output   data_imag_18_out_ap_vld;
output  [15:0] data_imag_17_out;
output   data_imag_17_out_ap_vld;
output  [15:0] data_imag_16_out;
output   data_imag_16_out_ap_vld;
output  [15:0] data_imag_15_out;
output   data_imag_15_out_ap_vld;
output  [15:0] data_imag_14_out;
output   data_imag_14_out_ap_vld;
output  [15:0] data_imag_13_out;
output   data_imag_13_out_ap_vld;
output  [15:0] data_imag_12_out;
output   data_imag_12_out_ap_vld;
output  [15:0] data_imag_11_out;
output   data_imag_11_out_ap_vld;
output  [15:0] data_imag_10_out;
output   data_imag_10_out_ap_vld;
output  [15:0] data_imag_9_out;
output   data_imag_9_out_ap_vld;
output  [15:0] data_imag_8_out;
output   data_imag_8_out_ap_vld;
output  [15:0] data_imag_7_out;
output   data_imag_7_out_ap_vld;
output  [15:0] data_imag_6_out;
output   data_imag_6_out_ap_vld;
output  [15:0] data_imag_5_out;
output   data_imag_5_out_ap_vld;
output  [15:0] data_imag_4_out;
output   data_imag_4_out_ap_vld;
output  [15:0] data_imag_3_out;
output   data_imag_3_out_ap_vld;
output  [15:0] data_imag_2_out;
output   data_imag_2_out_ap_vld;
output  [15:0] data_imag_1_out;
output   data_imag_1_out_ap_vld;
output  [15:0] data_imag_out;
output   data_imag_out_ap_vld;
output  [15:0] data_real_31_out;
output   data_real_31_out_ap_vld;
output  [15:0] data_real_30_out;
output   data_real_30_out_ap_vld;
output  [15:0] data_real_29_out;
output   data_real_29_out_ap_vld;
output  [15:0] data_real_28_out;
output   data_real_28_out_ap_vld;
output  [15:0] data_real_27_out;
output   data_real_27_out_ap_vld;
output  [15:0] data_real_26_out;
output   data_real_26_out_ap_vld;
output  [15:0] data_real_25_out;
output   data_real_25_out_ap_vld;
output  [15:0] data_real_24_out;
output   data_real_24_out_ap_vld;
output  [15:0] data_real_23_out;
output   data_real_23_out_ap_vld;
output  [15:0] data_real_22_out;
output   data_real_22_out_ap_vld;
output  [15:0] data_real_21_out;
output   data_real_21_out_ap_vld;
output  [15:0] data_real_20_out;
output   data_real_20_out_ap_vld;
output  [15:0] data_real_19_out;
output   data_real_19_out_ap_vld;
output  [15:0] data_real_18_out;
output   data_real_18_out_ap_vld;
output  [15:0] data_real_17_out;
output   data_real_17_out_ap_vld;
output  [15:0] data_real_16_out;
output   data_real_16_out_ap_vld;
output  [15:0] data_real_15_out;
output   data_real_15_out_ap_vld;
output  [15:0] data_real_14_out;
output   data_real_14_out_ap_vld;
output  [15:0] data_real_13_out;
output   data_real_13_out_ap_vld;
output  [15:0] data_real_12_out;
output   data_real_12_out_ap_vld;
output  [15:0] data_real_11_out;
output   data_real_11_out_ap_vld;
output  [15:0] data_real_10_out;
output   data_real_10_out_ap_vld;
output  [15:0] data_real_9_out;
output   data_real_9_out_ap_vld;
output  [15:0] data_real_8_out;
output   data_real_8_out_ap_vld;
output  [15:0] data_real_7_out;
output   data_real_7_out_ap_vld;
output  [15:0] data_real_6_out;
output   data_real_6_out_ap_vld;
output  [15:0] data_real_5_out;
output   data_real_5_out_ap_vld;
output  [15:0] data_real_4_out;
output   data_real_4_out_ap_vld;
output  [15:0] data_real_3_out;
output   data_real_3_out_ap_vld;
output  [15:0] data_real_2_out;
output   data_real_2_out_ap_vld;
output  [15:0] data_real_1_out;
output   data_real_1_out_ap_vld;
output  [15:0] data_real_out;
output   data_real_out_ap_vld;

reg ap_idle;
reg in_stream_TREADY;
reg data_imag_31_out_ap_vld;
reg data_imag_30_out_ap_vld;
reg data_imag_29_out_ap_vld;
reg data_imag_28_out_ap_vld;
reg data_imag_27_out_ap_vld;
reg data_imag_26_out_ap_vld;
reg data_imag_25_out_ap_vld;
reg data_imag_24_out_ap_vld;
reg data_imag_23_out_ap_vld;
reg data_imag_22_out_ap_vld;
reg data_imag_21_out_ap_vld;
reg data_imag_20_out_ap_vld;
reg data_imag_19_out_ap_vld;
reg data_imag_18_out_ap_vld;
reg data_imag_17_out_ap_vld;
reg data_imag_16_out_ap_vld;
reg data_imag_15_out_ap_vld;
reg data_imag_14_out_ap_vld;
reg data_imag_13_out_ap_vld;
reg data_imag_12_out_ap_vld;
reg data_imag_11_out_ap_vld;
reg data_imag_10_out_ap_vld;
reg data_imag_9_out_ap_vld;
reg data_imag_8_out_ap_vld;
reg data_imag_7_out_ap_vld;
reg data_imag_6_out_ap_vld;
reg data_imag_5_out_ap_vld;
reg data_imag_4_out_ap_vld;
reg data_imag_3_out_ap_vld;
reg data_imag_2_out_ap_vld;
reg data_imag_1_out_ap_vld;
reg data_imag_out_ap_vld;
reg data_real_31_out_ap_vld;
reg data_real_30_out_ap_vld;
reg data_real_29_out_ap_vld;
reg data_real_28_out_ap_vld;
reg data_real_27_out_ap_vld;
reg data_real_26_out_ap_vld;
reg data_real_25_out_ap_vld;
reg data_real_24_out_ap_vld;
reg data_real_23_out_ap_vld;
reg data_real_22_out_ap_vld;
reg data_real_21_out_ap_vld;
reg data_real_20_out_ap_vld;
reg data_real_19_out_ap_vld;
reg data_real_18_out_ap_vld;
reg data_real_17_out_ap_vld;
reg data_real_16_out_ap_vld;
reg data_real_15_out_ap_vld;
reg data_real_14_out_ap_vld;
reg data_real_13_out_ap_vld;
reg data_real_12_out_ap_vld;
reg data_real_11_out_ap_vld;
reg data_real_10_out_ap_vld;
reg data_real_9_out_ap_vld;
reg data_real_8_out_ap_vld;
reg data_real_7_out_ap_vld;
reg data_real_6_out_ap_vld;
reg data_real_5_out_ap_vld;
reg data_real_4_out_ap_vld;
reg data_real_3_out_ap_vld;
reg data_real_2_out_ap_vld;
reg data_real_1_out_ap_vld;
reg data_real_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln74_fu_1278_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    in_stream_TDATA_blk_n;
wire   [5:0] add_ln74_fu_1284_p2;
reg   [5:0] add_ln74_reg_2346;
wire   [4:0] trunc_ln74_fu_1290_p1;
reg   [4:0] trunc_ln74_reg_2351;
reg   [5:0] i_fu_236;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_i_2;
reg   [15:0] data_real_fu_240;
wire   [15:0] data_real_32_fu_1294_p1;
reg   [15:0] data_real_1_fu_244;
reg   [15:0] data_real_2_fu_248;
reg   [15:0] data_real_3_fu_252;
reg   [15:0] data_real_4_fu_256;
reg   [15:0] data_real_5_fu_260;
reg   [15:0] data_real_6_fu_264;
reg   [15:0] data_real_7_fu_268;
reg   [15:0] data_real_8_fu_272;
reg   [15:0] data_real_9_fu_276;
reg   [15:0] data_real_10_fu_280;
reg   [15:0] data_real_11_fu_284;
reg   [15:0] data_real_12_fu_288;
reg   [15:0] data_real_13_fu_292;
reg   [15:0] data_real_14_fu_296;
reg   [15:0] data_real_15_fu_300;
reg   [15:0] data_real_16_fu_304;
reg   [15:0] data_real_17_fu_308;
reg   [15:0] data_real_18_fu_312;
reg   [15:0] data_real_19_fu_316;
reg   [15:0] data_real_20_fu_320;
reg   [15:0] data_real_21_fu_324;
reg   [15:0] data_real_22_fu_328;
reg   [15:0] data_real_23_fu_332;
reg   [15:0] data_real_24_fu_336;
reg   [15:0] data_real_25_fu_340;
reg   [15:0] data_real_26_fu_344;
reg   [15:0] data_real_27_fu_348;
reg   [15:0] data_real_28_fu_352;
reg   [15:0] data_real_29_fu_356;
reg   [15:0] data_real_30_fu_360;
reg   [15:0] data_real_31_fu_364;
reg   [15:0] data_imag_fu_368;
reg   [15:0] data_imag_1_fu_372;
reg   [15:0] data_imag_2_fu_376;
reg   [15:0] data_imag_3_fu_380;
reg   [15:0] data_imag_4_fu_384;
reg   [15:0] data_imag_5_fu_388;
reg   [15:0] data_imag_6_fu_392;
reg   [15:0] data_imag_7_fu_396;
reg   [15:0] data_imag_8_fu_400;
reg   [15:0] data_imag_9_fu_404;
reg   [15:0] data_imag_10_fu_408;
reg   [15:0] data_imag_11_fu_412;
reg   [15:0] data_imag_12_fu_416;
reg   [15:0] data_imag_13_fu_420;
reg   [15:0] data_imag_14_fu_424;
reg   [15:0] data_imag_15_fu_428;
reg   [15:0] data_imag_16_fu_432;
reg   [15:0] data_imag_17_fu_436;
reg   [15:0] data_imag_18_fu_440;
reg   [15:0] data_imag_19_fu_444;
reg   [15:0] data_imag_20_fu_448;
reg   [15:0] data_imag_21_fu_452;
reg   [15:0] data_imag_22_fu_456;
reg   [15:0] data_imag_23_fu_460;
reg   [15:0] data_imag_24_fu_464;
reg   [15:0] data_imag_25_fu_468;
reg   [15:0] data_imag_26_fu_472;
reg   [15:0] data_imag_27_fu_476;
reg   [15:0] data_imag_28_fu_480;
reg   [15:0] data_imag_29_fu_484;
reg   [15:0] data_imag_30_fu_488;
reg   [15:0] data_imag_31_fu_492;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

fft32_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_10_fu_408 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd10))) begin
        data_imag_10_fu_408 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_11_fu_412 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd11))) begin
        data_imag_11_fu_412 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_12_fu_416 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd12))) begin
        data_imag_12_fu_416 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_13_fu_420 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd13))) begin
        data_imag_13_fu_420 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_14_fu_424 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd14))) begin
        data_imag_14_fu_424 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_15_fu_428 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd15))) begin
        data_imag_15_fu_428 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_16_fu_432 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd16))) begin
        data_imag_16_fu_432 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_17_fu_436 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd17))) begin
        data_imag_17_fu_436 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_18_fu_440 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd18))) begin
        data_imag_18_fu_440 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_19_fu_444 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd19))) begin
        data_imag_19_fu_444 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_1_fu_372 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd1))) begin
        data_imag_1_fu_372 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_20_fu_448 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd20))) begin
        data_imag_20_fu_448 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_21_fu_452 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd21))) begin
        data_imag_21_fu_452 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_22_fu_456 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd22))) begin
        data_imag_22_fu_456 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_23_fu_460 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd23))) begin
        data_imag_23_fu_460 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_24_fu_464 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd24))) begin
        data_imag_24_fu_464 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_25_fu_468 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd25))) begin
        data_imag_25_fu_468 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_26_fu_472 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd26))) begin
        data_imag_26_fu_472 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_27_fu_476 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd27))) begin
        data_imag_27_fu_476 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_28_fu_480 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd28))) begin
        data_imag_28_fu_480 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_29_fu_484 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd29))) begin
        data_imag_29_fu_484 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_2_fu_376 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd2))) begin
        data_imag_2_fu_376 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_30_fu_488 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd30))) begin
        data_imag_30_fu_488 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_31_fu_492 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd31))) begin
        data_imag_31_fu_492 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_3_fu_380 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd3))) begin
        data_imag_3_fu_380 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_4_fu_384 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd4))) begin
        data_imag_4_fu_384 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_5_fu_388 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd5))) begin
        data_imag_5_fu_388 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_6_fu_392 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd6))) begin
        data_imag_6_fu_392 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_7_fu_396 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd7))) begin
        data_imag_7_fu_396 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_8_fu_400 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd8))) begin
        data_imag_8_fu_400 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_9_fu_404 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd9))) begin
        data_imag_9_fu_404 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_imag_fu_368 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd0))) begin
        data_imag_fu_368 <= {{in_stream_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_10_fu_280 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd10))) begin
        data_real_10_fu_280 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_11_fu_284 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd11))) begin
        data_real_11_fu_284 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_12_fu_288 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd12))) begin
        data_real_12_fu_288 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_13_fu_292 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd13))) begin
        data_real_13_fu_292 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_14_fu_296 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd14))) begin
        data_real_14_fu_296 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_15_fu_300 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd15))) begin
        data_real_15_fu_300 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_16_fu_304 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd16))) begin
        data_real_16_fu_304 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_17_fu_308 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd17))) begin
        data_real_17_fu_308 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_18_fu_312 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd18))) begin
        data_real_18_fu_312 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_19_fu_316 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd19))) begin
        data_real_19_fu_316 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_1_fu_244 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd1))) begin
        data_real_1_fu_244 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_20_fu_320 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd20))) begin
        data_real_20_fu_320 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_21_fu_324 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd21))) begin
        data_real_21_fu_324 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_22_fu_328 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd22))) begin
        data_real_22_fu_328 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_23_fu_332 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd23))) begin
        data_real_23_fu_332 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_24_fu_336 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd24))) begin
        data_real_24_fu_336 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_25_fu_340 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd25))) begin
        data_real_25_fu_340 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_26_fu_344 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd26))) begin
        data_real_26_fu_344 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_27_fu_348 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd27))) begin
        data_real_27_fu_348 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_28_fu_352 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd28))) begin
        data_real_28_fu_352 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_29_fu_356 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd29))) begin
        data_real_29_fu_356 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_2_fu_248 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd2))) begin
        data_real_2_fu_248 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_30_fu_360 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd30))) begin
        data_real_30_fu_360 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_31_fu_364 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd31))) begin
        data_real_31_fu_364 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_3_fu_252 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd3))) begin
        data_real_3_fu_252 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_4_fu_256 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd4))) begin
        data_real_4_fu_256 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_5_fu_260 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd5))) begin
        data_real_5_fu_260 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_6_fu_264 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd6))) begin
        data_real_6_fu_264 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_7_fu_268 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd7))) begin
        data_real_7_fu_268 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_8_fu_272 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd8))) begin
        data_real_8_fu_272 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_9_fu_276 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd9))) begin
        data_real_9_fu_276 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        data_real_fu_240 <= 16'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln74_reg_2351 == 5'd0))) begin
        data_real_fu_240 <= data_real_32_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        i_fu_236 <= 6'd0;
    end else if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_fu_236 <= add_ln74_reg_2346;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln74_reg_2346 <= add_ln74_fu_1284_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        trunc_ln74_reg_2351 <= trunc_ln74_fu_1290_p1;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_stream_TVALID == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_2 = 6'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_236;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_10_out_ap_vld = 1'b1;
    end else begin
        data_imag_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_11_out_ap_vld = 1'b1;
    end else begin
        data_imag_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_12_out_ap_vld = 1'b1;
    end else begin
        data_imag_12_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_13_out_ap_vld = 1'b1;
    end else begin
        data_imag_13_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_14_out_ap_vld = 1'b1;
    end else begin
        data_imag_14_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_15_out_ap_vld = 1'b1;
    end else begin
        data_imag_15_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_16_out_ap_vld = 1'b1;
    end else begin
        data_imag_16_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_17_out_ap_vld = 1'b1;
    end else begin
        data_imag_17_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_18_out_ap_vld = 1'b1;
    end else begin
        data_imag_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_19_out_ap_vld = 1'b1;
    end else begin
        data_imag_19_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_1_out_ap_vld = 1'b1;
    end else begin
        data_imag_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_20_out_ap_vld = 1'b1;
    end else begin
        data_imag_20_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_21_out_ap_vld = 1'b1;
    end else begin
        data_imag_21_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_22_out_ap_vld = 1'b1;
    end else begin
        data_imag_22_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_23_out_ap_vld = 1'b1;
    end else begin
        data_imag_23_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_24_out_ap_vld = 1'b1;
    end else begin
        data_imag_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_25_out_ap_vld = 1'b1;
    end else begin
        data_imag_25_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_26_out_ap_vld = 1'b1;
    end else begin
        data_imag_26_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_27_out_ap_vld = 1'b1;
    end else begin
        data_imag_27_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_28_out_ap_vld = 1'b1;
    end else begin
        data_imag_28_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_29_out_ap_vld = 1'b1;
    end else begin
        data_imag_29_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_2_out_ap_vld = 1'b1;
    end else begin
        data_imag_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_30_out_ap_vld = 1'b1;
    end else begin
        data_imag_30_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_31_out_ap_vld = 1'b1;
    end else begin
        data_imag_31_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_3_out_ap_vld = 1'b1;
    end else begin
        data_imag_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_4_out_ap_vld = 1'b1;
    end else begin
        data_imag_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_5_out_ap_vld = 1'b1;
    end else begin
        data_imag_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_6_out_ap_vld = 1'b1;
    end else begin
        data_imag_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_7_out_ap_vld = 1'b1;
    end else begin
        data_imag_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_8_out_ap_vld = 1'b1;
    end else begin
        data_imag_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_9_out_ap_vld = 1'b1;
    end else begin
        data_imag_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_imag_out_ap_vld = 1'b1;
    end else begin
        data_imag_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_10_out_ap_vld = 1'b1;
    end else begin
        data_real_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_11_out_ap_vld = 1'b1;
    end else begin
        data_real_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_12_out_ap_vld = 1'b1;
    end else begin
        data_real_12_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_13_out_ap_vld = 1'b1;
    end else begin
        data_real_13_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_14_out_ap_vld = 1'b1;
    end else begin
        data_real_14_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_15_out_ap_vld = 1'b1;
    end else begin
        data_real_15_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_16_out_ap_vld = 1'b1;
    end else begin
        data_real_16_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_17_out_ap_vld = 1'b1;
    end else begin
        data_real_17_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_18_out_ap_vld = 1'b1;
    end else begin
        data_real_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_19_out_ap_vld = 1'b1;
    end else begin
        data_real_19_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_1_out_ap_vld = 1'b1;
    end else begin
        data_real_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_20_out_ap_vld = 1'b1;
    end else begin
        data_real_20_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_21_out_ap_vld = 1'b1;
    end else begin
        data_real_21_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_22_out_ap_vld = 1'b1;
    end else begin
        data_real_22_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_23_out_ap_vld = 1'b1;
    end else begin
        data_real_23_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_24_out_ap_vld = 1'b1;
    end else begin
        data_real_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_25_out_ap_vld = 1'b1;
    end else begin
        data_real_25_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_26_out_ap_vld = 1'b1;
    end else begin
        data_real_26_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_27_out_ap_vld = 1'b1;
    end else begin
        data_real_27_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_28_out_ap_vld = 1'b1;
    end else begin
        data_real_28_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_29_out_ap_vld = 1'b1;
    end else begin
        data_real_29_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_2_out_ap_vld = 1'b1;
    end else begin
        data_real_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_30_out_ap_vld = 1'b1;
    end else begin
        data_real_30_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_31_out_ap_vld = 1'b1;
    end else begin
        data_real_31_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_3_out_ap_vld = 1'b1;
    end else begin
        data_real_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_4_out_ap_vld = 1'b1;
    end else begin
        data_real_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_5_out_ap_vld = 1'b1;
    end else begin
        data_real_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_6_out_ap_vld = 1'b1;
    end else begin
        data_real_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_7_out_ap_vld = 1'b1;
    end else begin
        data_real_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_8_out_ap_vld = 1'b1;
    end else begin
        data_real_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_9_out_ap_vld = 1'b1;
    end else begin
        data_real_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_real_out_ap_vld = 1'b1;
    end else begin
        data_real_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_stream_TDATA_blk_n = in_stream_TVALID;
    end else begin
        in_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_stream_TREADY = 1'b1;
    end else begin
        in_stream_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start_int == 1'b1) & (icmp_ln74_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((in_stream_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln74_fu_1284_p2 = (ap_sig_allocacmp_i_2 + 6'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (in_stream_TVALID == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign data_imag_10_out = data_imag_10_fu_408;

assign data_imag_11_out = data_imag_11_fu_412;

assign data_imag_12_out = data_imag_12_fu_416;

assign data_imag_13_out = data_imag_13_fu_420;

assign data_imag_14_out = data_imag_14_fu_424;

assign data_imag_15_out = data_imag_15_fu_428;

assign data_imag_16_out = data_imag_16_fu_432;

assign data_imag_17_out = data_imag_17_fu_436;

assign data_imag_18_out = data_imag_18_fu_440;

assign data_imag_19_out = data_imag_19_fu_444;

assign data_imag_1_out = data_imag_1_fu_372;

assign data_imag_20_out = data_imag_20_fu_448;

assign data_imag_21_out = data_imag_21_fu_452;

assign data_imag_22_out = data_imag_22_fu_456;

assign data_imag_23_out = data_imag_23_fu_460;

assign data_imag_24_out = data_imag_24_fu_464;

assign data_imag_25_out = data_imag_25_fu_468;

assign data_imag_26_out = data_imag_26_fu_472;

assign data_imag_27_out = data_imag_27_fu_476;

assign data_imag_28_out = data_imag_28_fu_480;

assign data_imag_29_out = data_imag_29_fu_484;

assign data_imag_2_out = data_imag_2_fu_376;

assign data_imag_30_out = data_imag_30_fu_488;

assign data_imag_31_out = data_imag_31_fu_492;

assign data_imag_3_out = data_imag_3_fu_380;

assign data_imag_4_out = data_imag_4_fu_384;

assign data_imag_5_out = data_imag_5_fu_388;

assign data_imag_6_out = data_imag_6_fu_392;

assign data_imag_7_out = data_imag_7_fu_396;

assign data_imag_8_out = data_imag_8_fu_400;

assign data_imag_9_out = data_imag_9_fu_404;

assign data_imag_out = data_imag_fu_368;

assign data_real_10_out = data_real_10_fu_280;

assign data_real_11_out = data_real_11_fu_284;

assign data_real_12_out = data_real_12_fu_288;

assign data_real_13_out = data_real_13_fu_292;

assign data_real_14_out = data_real_14_fu_296;

assign data_real_15_out = data_real_15_fu_300;

assign data_real_16_out = data_real_16_fu_304;

assign data_real_17_out = data_real_17_fu_308;

assign data_real_18_out = data_real_18_fu_312;

assign data_real_19_out = data_real_19_fu_316;

assign data_real_1_out = data_real_1_fu_244;

assign data_real_20_out = data_real_20_fu_320;

assign data_real_21_out = data_real_21_fu_324;

assign data_real_22_out = data_real_22_fu_328;

assign data_real_23_out = data_real_23_fu_332;

assign data_real_24_out = data_real_24_fu_336;

assign data_real_25_out = data_real_25_fu_340;

assign data_real_26_out = data_real_26_fu_344;

assign data_real_27_out = data_real_27_fu_348;

assign data_real_28_out = data_real_28_fu_352;

assign data_real_29_out = data_real_29_fu_356;

assign data_real_2_out = data_real_2_fu_248;

assign data_real_30_out = data_real_30_fu_360;

assign data_real_31_out = data_real_31_fu_364;

assign data_real_32_fu_1294_p1 = in_stream_TDATA[15:0];

assign data_real_3_out = data_real_3_fu_252;

assign data_real_4_out = data_real_4_fu_256;

assign data_real_5_out = data_real_5_fu_260;

assign data_real_6_out = data_real_6_fu_264;

assign data_real_7_out = data_real_7_fu_268;

assign data_real_8_out = data_real_8_fu_272;

assign data_real_9_out = data_real_9_fu_276;

assign data_real_out = data_real_fu_240;

assign icmp_ln74_fu_1278_p2 = ((ap_sig_allocacmp_i_2 == 6'd32) ? 1'b1 : 1'b0);

assign trunc_ln74_fu_1290_p1 = ap_sig_allocacmp_i_2[4:0];

endmodule //fft32_fft32_Pipeline_input_loop
