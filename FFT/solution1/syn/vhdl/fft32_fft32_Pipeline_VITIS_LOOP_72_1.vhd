-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft32_fft32_Pipeline_VITIS_LOOP_72_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TDATA : IN STD_LOGIC_VECTOR (47 downto 0);
    in_stream_TREADY : OUT STD_LOGIC;
    data_imag_31_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_31_out_ap_vld : OUT STD_LOGIC;
    data_imag_30_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_30_out_ap_vld : OUT STD_LOGIC;
    data_imag_29_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_29_out_ap_vld : OUT STD_LOGIC;
    data_imag_28_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_28_out_ap_vld : OUT STD_LOGIC;
    data_imag_27_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_27_out_ap_vld : OUT STD_LOGIC;
    data_imag_26_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_26_out_ap_vld : OUT STD_LOGIC;
    data_imag_25_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_25_out_ap_vld : OUT STD_LOGIC;
    data_imag_24_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_24_out_ap_vld : OUT STD_LOGIC;
    data_imag_23_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_23_out_ap_vld : OUT STD_LOGIC;
    data_imag_22_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_22_out_ap_vld : OUT STD_LOGIC;
    data_imag_21_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_21_out_ap_vld : OUT STD_LOGIC;
    data_imag_20_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_20_out_ap_vld : OUT STD_LOGIC;
    data_imag_19_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_19_out_ap_vld : OUT STD_LOGIC;
    data_imag_18_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_18_out_ap_vld : OUT STD_LOGIC;
    data_imag_17_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_17_out_ap_vld : OUT STD_LOGIC;
    data_imag_16_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_16_out_ap_vld : OUT STD_LOGIC;
    data_imag_15_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_15_out_ap_vld : OUT STD_LOGIC;
    data_imag_14_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_14_out_ap_vld : OUT STD_LOGIC;
    data_imag_13_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_13_out_ap_vld : OUT STD_LOGIC;
    data_imag_12_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_12_out_ap_vld : OUT STD_LOGIC;
    data_imag_11_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_11_out_ap_vld : OUT STD_LOGIC;
    data_imag_10_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_10_out_ap_vld : OUT STD_LOGIC;
    data_imag_9_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_9_out_ap_vld : OUT STD_LOGIC;
    data_imag_8_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_8_out_ap_vld : OUT STD_LOGIC;
    data_imag_7_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_7_out_ap_vld : OUT STD_LOGIC;
    data_imag_6_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_6_out_ap_vld : OUT STD_LOGIC;
    data_imag_5_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_5_out_ap_vld : OUT STD_LOGIC;
    data_imag_4_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_4_out_ap_vld : OUT STD_LOGIC;
    data_imag_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_3_out_ap_vld : OUT STD_LOGIC;
    data_imag_2_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_2_out_ap_vld : OUT STD_LOGIC;
    data_imag_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_1_out_ap_vld : OUT STD_LOGIC;
    data_imag_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_imag_out_ap_vld : OUT STD_LOGIC;
    data_real_31_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_31_out_ap_vld : OUT STD_LOGIC;
    data_real_30_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_30_out_ap_vld : OUT STD_LOGIC;
    data_real_29_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_29_out_ap_vld : OUT STD_LOGIC;
    data_real_28_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_28_out_ap_vld : OUT STD_LOGIC;
    data_real_27_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_27_out_ap_vld : OUT STD_LOGIC;
    data_real_26_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_26_out_ap_vld : OUT STD_LOGIC;
    data_real_25_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_25_out_ap_vld : OUT STD_LOGIC;
    data_real_24_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_24_out_ap_vld : OUT STD_LOGIC;
    data_real_23_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_23_out_ap_vld : OUT STD_LOGIC;
    data_real_22_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_22_out_ap_vld : OUT STD_LOGIC;
    data_real_21_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_21_out_ap_vld : OUT STD_LOGIC;
    data_real_20_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_20_out_ap_vld : OUT STD_LOGIC;
    data_real_19_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_19_out_ap_vld : OUT STD_LOGIC;
    data_real_18_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_18_out_ap_vld : OUT STD_LOGIC;
    data_real_17_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_17_out_ap_vld : OUT STD_LOGIC;
    data_real_16_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_16_out_ap_vld : OUT STD_LOGIC;
    data_real_15_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_15_out_ap_vld : OUT STD_LOGIC;
    data_real_14_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_14_out_ap_vld : OUT STD_LOGIC;
    data_real_13_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_13_out_ap_vld : OUT STD_LOGIC;
    data_real_12_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_12_out_ap_vld : OUT STD_LOGIC;
    data_real_11_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_11_out_ap_vld : OUT STD_LOGIC;
    data_real_10_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_10_out_ap_vld : OUT STD_LOGIC;
    data_real_9_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_9_out_ap_vld : OUT STD_LOGIC;
    data_real_8_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_8_out_ap_vld : OUT STD_LOGIC;
    data_real_7_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_7_out_ap_vld : OUT STD_LOGIC;
    data_real_6_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_6_out_ap_vld : OUT STD_LOGIC;
    data_real_5_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_5_out_ap_vld : OUT STD_LOGIC;
    data_real_4_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_4_out_ap_vld : OUT STD_LOGIC;
    data_real_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_3_out_ap_vld : OUT STD_LOGIC;
    data_real_2_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_2_out_ap_vld : OUT STD_LOGIC;
    data_real_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_1_out_ap_vld : OUT STD_LOGIC;
    data_real_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_real_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of fft32_fft32_Pipeline_VITIS_LOOP_72_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln72_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal in_stream_TDATA_blk_n : STD_LOGIC;
    signal add_ln72_fu_1284_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln72_reg_2346 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln72_fu_1290_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln72_reg_2351 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_fu_236 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_1 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_real_fu_240 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_32_fu_1294_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_1_fu_244 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_2_fu_248 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_3_fu_252 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_4_fu_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_5_fu_260 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_6_fu_264 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_7_fu_268 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_8_fu_272 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_9_fu_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_10_fu_280 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_11_fu_284 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_12_fu_288 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_13_fu_292 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_14_fu_296 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_15_fu_300 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_16_fu_304 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_17_fu_308 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_18_fu_312 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_19_fu_316 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_20_fu_320 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_21_fu_324 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_22_fu_328 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_23_fu_332 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_24_fu_336 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_25_fu_340 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_26_fu_344 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_27_fu_348 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_28_fu_352 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_29_fu_356 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_30_fu_360 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_real_31_fu_364 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_fu_368 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_1_fu_372 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_2_fu_376 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_3_fu_380 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_4_fu_384 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_5_fu_388 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_6_fu_392 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_7_fu_396 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_8_fu_400 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_9_fu_404 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_10_fu_408 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_11_fu_412 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_12_fu_416 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_13_fu_420 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_14_fu_424 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_15_fu_428 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_16_fu_432 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_17_fu_436 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_18_fu_440 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_19_fu_444 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_20_fu_448 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_21_fu_452 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_22_fu_456 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_23_fu_460 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_24_fu_464 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_25_fu_468 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_26_fu_472 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_27_fu_476 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_28_fu_480 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_29_fu_484 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_30_fu_488 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_imag_31_fu_492 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fft32_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component fft32_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_start_int = ap_const_logic_1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    data_imag_10_fu_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_10_fu_408 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_A))) then 
                data_imag_10_fu_408 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_11_fu_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_11_fu_412 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_B))) then 
                data_imag_11_fu_412 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_12_fu_416_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_12_fu_416 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_C))) then 
                data_imag_12_fu_416 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_13_fu_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_13_fu_420 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_D))) then 
                data_imag_13_fu_420 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_14_fu_424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_14_fu_424 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_E))) then 
                data_imag_14_fu_424 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_15_fu_428_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_15_fu_428 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_F))) then 
                data_imag_15_fu_428 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_16_fu_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_16_fu_432 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_10))) then 
                data_imag_16_fu_432 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_17_fu_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_17_fu_436 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_11))) then 
                data_imag_17_fu_436 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_18_fu_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_18_fu_440 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_12))) then 
                data_imag_18_fu_440 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_19_fu_444_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_19_fu_444 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_13))) then 
                data_imag_19_fu_444 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_1_fu_372_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_1_fu_372 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1))) then 
                data_imag_1_fu_372 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_20_fu_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_20_fu_448 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_14))) then 
                data_imag_20_fu_448 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_21_fu_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_21_fu_452 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_15))) then 
                data_imag_21_fu_452 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_22_fu_456_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_22_fu_456 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_16))) then 
                data_imag_22_fu_456 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_23_fu_460_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_23_fu_460 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_17))) then 
                data_imag_23_fu_460 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_24_fu_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_24_fu_464 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_18))) then 
                data_imag_24_fu_464 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_25_fu_468_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_25_fu_468 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_19))) then 
                data_imag_25_fu_468 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_26_fu_472_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_26_fu_472 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1A))) then 
                data_imag_26_fu_472 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_27_fu_476_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_27_fu_476 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1B))) then 
                data_imag_27_fu_476 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_28_fu_480_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_28_fu_480 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1C))) then 
                data_imag_28_fu_480 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_29_fu_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_29_fu_484 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1D))) then 
                data_imag_29_fu_484 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_2_fu_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_2_fu_376 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_2))) then 
                data_imag_2_fu_376 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_30_fu_488_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_30_fu_488 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1E))) then 
                data_imag_30_fu_488 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_31_fu_492_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_31_fu_492 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1F))) then 
                data_imag_31_fu_492 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_3_fu_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_3_fu_380 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_3))) then 
                data_imag_3_fu_380 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_4_fu_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_4_fu_384 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_4))) then 
                data_imag_4_fu_384 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_5_fu_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_5_fu_388 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_5))) then 
                data_imag_5_fu_388 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_6_fu_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_6_fu_392 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_6))) then 
                data_imag_6_fu_392 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_7_fu_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_7_fu_396 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_7))) then 
                data_imag_7_fu_396 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_8_fu_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_8_fu_400 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_8))) then 
                data_imag_8_fu_400 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_9_fu_404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_9_fu_404 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_9))) then 
                data_imag_9_fu_404 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_imag_fu_368_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_imag_fu_368 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_0))) then 
                data_imag_fu_368 <= in_stream_TDATA(31 downto 16);
            end if; 
        end if;
    end process;

    data_real_10_fu_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_10_fu_280 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_A))) then 
                data_real_10_fu_280 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_11_fu_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_11_fu_284 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_B))) then 
                data_real_11_fu_284 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_12_fu_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_12_fu_288 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_C))) then 
                data_real_12_fu_288 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_13_fu_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_13_fu_292 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_D))) then 
                data_real_13_fu_292 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_14_fu_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_14_fu_296 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_E))) then 
                data_real_14_fu_296 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_15_fu_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_15_fu_300 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_F))) then 
                data_real_15_fu_300 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_16_fu_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_16_fu_304 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_10))) then 
                data_real_16_fu_304 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_17_fu_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_17_fu_308 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_11))) then 
                data_real_17_fu_308 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_18_fu_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_18_fu_312 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_12))) then 
                data_real_18_fu_312 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_19_fu_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_19_fu_316 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_13))) then 
                data_real_19_fu_316 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_1_fu_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_1_fu_244 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1))) then 
                data_real_1_fu_244 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_20_fu_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_20_fu_320 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_14))) then 
                data_real_20_fu_320 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_21_fu_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_21_fu_324 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_15))) then 
                data_real_21_fu_324 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_22_fu_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_22_fu_328 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_16))) then 
                data_real_22_fu_328 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_23_fu_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_23_fu_332 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_17))) then 
                data_real_23_fu_332 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_24_fu_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_24_fu_336 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_18))) then 
                data_real_24_fu_336 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_25_fu_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_25_fu_340 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_19))) then 
                data_real_25_fu_340 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_26_fu_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_26_fu_344 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1A))) then 
                data_real_26_fu_344 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_27_fu_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_27_fu_348 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1B))) then 
                data_real_27_fu_348 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_28_fu_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_28_fu_352 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1C))) then 
                data_real_28_fu_352 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_29_fu_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_29_fu_356 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1D))) then 
                data_real_29_fu_356 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_2_fu_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_2_fu_248 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_2))) then 
                data_real_2_fu_248 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_30_fu_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_30_fu_360 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1E))) then 
                data_real_30_fu_360 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_31_fu_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_31_fu_364 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_1F))) then 
                data_real_31_fu_364 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_3_fu_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_3_fu_252 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_3))) then 
                data_real_3_fu_252 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_4_fu_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_4_fu_256 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_4))) then 
                data_real_4_fu_256 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_5_fu_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_5_fu_260 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_5))) then 
                data_real_5_fu_260 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_6_fu_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_6_fu_264 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_6))) then 
                data_real_6_fu_264 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_7_fu_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_7_fu_268 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_7))) then 
                data_real_7_fu_268 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_8_fu_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_8_fu_272 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_8))) then 
                data_real_8_fu_272 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_9_fu_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_9_fu_276 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_9))) then 
                data_real_9_fu_276 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    data_real_fu_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                data_real_fu_240 <= ap_const_lv16_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln72_reg_2351 = ap_const_lv5_0))) then 
                data_real_fu_240 <= data_real_32_fu_1294_p1;
            end if; 
        end if;
    end process;

    i_fu_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                i_fu_236 <= ap_const_lv6_0;
            elsif (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_fu_236 <= add_ln72_reg_2346;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln72_reg_2346 <= add_ln72_fu_1284_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                trunc_ln72_reg_2351 <= trunc_ln72_fu_1290_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_CS_fsm_state2, in_stream_TVALID, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln72_fu_1284_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_1) + unsigned(ap_const_lv6_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(in_stream_TVALID)
    begin
        if ((in_stream_TVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(in_stream_TVALID)
    begin
                ap_block_state2_pp0_stage1_iter0 <= (in_stream_TVALID = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_loop_exit_ready, ap_done_reg, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state2, in_stream_TVALID)
    begin
        if (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_1_assign_proc : process(ap_CS_fsm_state1, i_fu_236, ap_loop_init)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_1 <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_i_1 <= i_fu_236;
        end if; 
    end process;

    data_imag_10_out <= data_imag_10_fu_408;

    data_imag_10_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_10_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_11_out <= data_imag_11_fu_412;

    data_imag_11_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_11_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_12_out <= data_imag_12_fu_416;

    data_imag_12_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_12_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_12_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_13_out <= data_imag_13_fu_420;

    data_imag_13_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_13_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_13_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_14_out <= data_imag_14_fu_424;

    data_imag_14_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_14_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_14_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_15_out <= data_imag_15_fu_428;

    data_imag_15_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_15_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_15_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_16_out <= data_imag_16_fu_432;

    data_imag_16_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_16_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_16_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_17_out <= data_imag_17_fu_436;

    data_imag_17_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_17_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_17_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_18_out <= data_imag_18_fu_440;

    data_imag_18_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_18_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_18_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_19_out <= data_imag_19_fu_444;

    data_imag_19_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_19_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_19_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_1_out <= data_imag_1_fu_372;

    data_imag_1_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_1_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_20_out <= data_imag_20_fu_448;

    data_imag_20_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_20_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_20_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_21_out <= data_imag_21_fu_452;

    data_imag_21_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_21_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_21_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_22_out <= data_imag_22_fu_456;

    data_imag_22_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_22_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_22_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_23_out <= data_imag_23_fu_460;

    data_imag_23_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_23_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_23_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_24_out <= data_imag_24_fu_464;

    data_imag_24_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_24_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_24_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_25_out <= data_imag_25_fu_468;

    data_imag_25_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_25_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_25_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_26_out <= data_imag_26_fu_472;

    data_imag_26_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_26_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_26_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_27_out <= data_imag_27_fu_476;

    data_imag_27_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_27_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_27_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_28_out <= data_imag_28_fu_480;

    data_imag_28_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_28_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_28_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_29_out <= data_imag_29_fu_484;

    data_imag_29_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_29_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_29_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_2_out <= data_imag_2_fu_376;

    data_imag_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_2_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_30_out <= data_imag_30_fu_488;

    data_imag_30_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_30_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_30_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_31_out <= data_imag_31_fu_492;

    data_imag_31_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_31_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_31_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_3_out <= data_imag_3_fu_380;

    data_imag_3_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_3_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_4_out <= data_imag_4_fu_384;

    data_imag_4_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_4_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_5_out <= data_imag_5_fu_388;

    data_imag_5_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_5_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_6_out <= data_imag_6_fu_392;

    data_imag_6_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_6_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_7_out <= data_imag_7_fu_396;

    data_imag_7_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_7_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_8_out <= data_imag_8_fu_400;

    data_imag_8_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_8_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_9_out <= data_imag_9_fu_404;

    data_imag_9_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_9_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_imag_out <= data_imag_fu_368;

    data_imag_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_imag_out_ap_vld <= ap_const_logic_1;
        else 
            data_imag_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_10_out <= data_real_10_fu_280;

    data_real_10_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_10_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_11_out <= data_real_11_fu_284;

    data_real_11_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_11_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_12_out <= data_real_12_fu_288;

    data_real_12_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_12_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_12_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_13_out <= data_real_13_fu_292;

    data_real_13_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_13_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_13_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_14_out <= data_real_14_fu_296;

    data_real_14_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_14_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_14_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_15_out <= data_real_15_fu_300;

    data_real_15_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_15_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_15_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_16_out <= data_real_16_fu_304;

    data_real_16_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_16_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_16_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_17_out <= data_real_17_fu_308;

    data_real_17_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_17_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_17_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_18_out <= data_real_18_fu_312;

    data_real_18_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_18_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_18_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_19_out <= data_real_19_fu_316;

    data_real_19_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_19_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_19_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_1_out <= data_real_1_fu_244;

    data_real_1_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_1_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_20_out <= data_real_20_fu_320;

    data_real_20_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_20_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_20_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_21_out <= data_real_21_fu_324;

    data_real_21_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_21_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_21_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_22_out <= data_real_22_fu_328;

    data_real_22_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_22_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_22_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_23_out <= data_real_23_fu_332;

    data_real_23_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_23_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_23_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_24_out <= data_real_24_fu_336;

    data_real_24_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_24_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_24_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_25_out <= data_real_25_fu_340;

    data_real_25_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_25_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_25_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_26_out <= data_real_26_fu_344;

    data_real_26_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_26_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_26_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_27_out <= data_real_27_fu_348;

    data_real_27_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_27_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_27_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_28_out <= data_real_28_fu_352;

    data_real_28_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_28_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_28_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_29_out <= data_real_29_fu_356;

    data_real_29_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_29_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_29_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_2_out <= data_real_2_fu_248;

    data_real_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_2_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_30_out <= data_real_30_fu_360;

    data_real_30_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_30_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_30_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_31_out <= data_real_31_fu_364;

    data_real_31_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_31_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_31_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_32_fu_1294_p1 <= in_stream_TDATA(16 - 1 downto 0);
    data_real_3_out <= data_real_3_fu_252;

    data_real_3_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_3_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_4_out <= data_real_4_fu_256;

    data_real_4_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_4_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_5_out <= data_real_5_fu_260;

    data_real_5_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_5_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_6_out <= data_real_6_fu_264;

    data_real_6_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_6_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_7_out <= data_real_7_fu_268;

    data_real_7_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_7_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_8_out <= data_real_8_fu_272;

    data_real_8_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_8_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_9_out <= data_real_9_fu_276;

    data_real_9_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_9_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_real_out <= data_real_fu_240;

    data_real_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln72_fu_1278_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln72_fu_1278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_real_out_ap_vld <= ap_const_logic_1;
        else 
            data_real_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln72_fu_1278_p2 <= "1" when (ap_sig_allocacmp_i_1 = ap_const_lv6_20) else "0";

    in_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state2, in_stream_TVALID)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_stream_TDATA_blk_n <= in_stream_TVALID;
        else 
            in_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_stream_TREADY_assign_proc : process(ap_CS_fsm_state2, in_stream_TVALID)
    begin
        if (((in_stream_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            in_stream_TREADY <= ap_const_logic_1;
        else 
            in_stream_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln72_fu_1290_p1 <= ap_sig_allocacmp_i_1(5 - 1 downto 0);
end behav;
