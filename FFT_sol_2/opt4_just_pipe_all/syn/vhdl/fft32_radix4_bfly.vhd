-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft32_radix4_bfly is
port (
    ap_ready : OUT STD_LOGIC;
    a_real_read : IN STD_LOGIC_VECTOR (15 downto 0);
    a_imag_read : IN STD_LOGIC_VECTOR (15 downto 0);
    b_real_read : IN STD_LOGIC_VECTOR (15 downto 0);
    b_imag_read : IN STD_LOGIC_VECTOR (15 downto 0);
    c_real_read : IN STD_LOGIC_VECTOR (15 downto 0);
    c_imag_read : IN STD_LOGIC_VECTOR (15 downto 0);
    d_real_read : IN STD_LOGIC_VECTOR (15 downto 0);
    d_imag_read : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of fft32_radix4_bfly is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal cr0_fu_92_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ar0_fu_68_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ci0_fu_98_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ai0_fu_74_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ci1_fu_110_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ar1_fu_80_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ai1_fu_86_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cr1_fu_104_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln34_fu_116_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln34_2_fu_122_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln35_fu_128_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln35_fu_134_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln36_fu_140_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln36_2_fu_146_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln37_fu_152_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln37_fu_158_p2 : STD_LOGIC_VECTOR (15 downto 0);


begin



    add_ln34_2_fu_122_p2 <= std_logic_vector(unsigned(ci0_fu_98_p2) + unsigned(ai0_fu_74_p2));
    add_ln34_fu_116_p2 <= std_logic_vector(unsigned(cr0_fu_92_p2) + unsigned(ar0_fu_68_p2));
    add_ln35_fu_128_p2 <= std_logic_vector(unsigned(ci1_fu_110_p2) + unsigned(ar1_fu_80_p2));
    add_ln37_fu_158_p2 <= std_logic_vector(unsigned(cr1_fu_104_p2) + unsigned(ai1_fu_86_p2));
    ai0_fu_74_p2 <= std_logic_vector(unsigned(b_imag_read) + unsigned(a_imag_read));
    ai1_fu_86_p2 <= std_logic_vector(unsigned(a_imag_read) - unsigned(b_imag_read));
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= add_ln34_fu_116_p2;
    ap_return_1 <= add_ln34_2_fu_122_p2;
    ap_return_2 <= add_ln35_fu_128_p2;
    ap_return_3 <= sub_ln35_fu_134_p2;
    ap_return_4 <= sub_ln36_fu_140_p2;
    ap_return_5 <= sub_ln36_2_fu_146_p2;
    ap_return_6 <= sub_ln37_fu_152_p2;
    ap_return_7 <= add_ln37_fu_158_p2;
    ar0_fu_68_p2 <= std_logic_vector(unsigned(b_real_read) + unsigned(a_real_read));
    ar1_fu_80_p2 <= std_logic_vector(unsigned(a_real_read) - unsigned(b_real_read));
    ci0_fu_98_p2 <= std_logic_vector(unsigned(d_imag_read) + unsigned(c_imag_read));
    ci1_fu_110_p2 <= std_logic_vector(unsigned(c_imag_read) - unsigned(d_imag_read));
    cr0_fu_92_p2 <= std_logic_vector(unsigned(d_real_read) + unsigned(c_real_read));
    cr1_fu_104_p2 <= std_logic_vector(unsigned(c_real_read) - unsigned(d_real_read));
    sub_ln35_fu_134_p2 <= std_logic_vector(unsigned(ai1_fu_86_p2) - unsigned(cr1_fu_104_p2));
    sub_ln36_2_fu_146_p2 <= std_logic_vector(unsigned(ai0_fu_74_p2) - unsigned(ci0_fu_98_p2));
    sub_ln36_fu_140_p2 <= std_logic_vector(unsigned(ar0_fu_68_p2) - unsigned(cr0_fu_92_p2));
    sub_ln37_fu_152_p2 <= std_logic_vector(unsigned(ar1_fu_80_p2) - unsigned(ci1_fu_110_p2));
end behav;
