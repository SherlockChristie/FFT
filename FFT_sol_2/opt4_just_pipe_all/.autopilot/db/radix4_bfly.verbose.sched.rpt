

================================================================
== Vitis HLS Report for 'radix4_bfly'
================================================================
* Date:           Wed Jun 25 09:29:19 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        FFT_sol_2
* Solution:       opt4_just_pipe_all (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z030-sbv485-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.154 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|      yes|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.15>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%d_imag_read_2 = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %d_imag_read" [FFT32_check.cpp:16]   --->   Operation 2 'read' 'd_imag_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%d_real_read_2 = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %d_real_read" [FFT32_check.cpp:16]   --->   Operation 3 'read' 'd_real_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%c_imag_read_2 = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %c_imag_read" [FFT32_check.cpp:16]   --->   Operation 4 'read' 'c_imag_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%c_real_read_2 = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %c_real_read" [FFT32_check.cpp:16]   --->   Operation 5 'read' 'c_real_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%b_imag_read_2 = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %b_imag_read" [FFT32_check.cpp:16]   --->   Operation 6 'read' 'b_imag_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%b_real_read_2 = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %b_real_read" [FFT32_check.cpp:16]   --->   Operation 7 'read' 'b_real_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%a_imag_read_2 = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %a_imag_read" [FFT32_check.cpp:16]   --->   Operation 8 'read' 'a_imag_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%a_real_read_2 = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %a_real_read" [FFT32_check.cpp:16]   --->   Operation 9 'read' 'a_real_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (2.07ns)   --->   "%ar0 = add i16 %b_real_read_2, i16 %a_real_read_2" [FFT32_check.cpp:24]   --->   Operation 10 'add' 'ar0' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (2.07ns)   --->   "%ai0 = add i16 %b_imag_read_2, i16 %a_imag_read_2" [FFT32_check.cpp:25]   --->   Operation 11 'add' 'ai0' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (2.07ns)   --->   "%ar1 = sub i16 %a_real_read_2, i16 %b_real_read_2" [FFT32_check.cpp:26]   --->   Operation 12 'sub' 'ar1' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (2.07ns)   --->   "%ai1 = sub i16 %a_imag_read_2, i16 %b_imag_read_2" [FFT32_check.cpp:27]   --->   Operation 13 'sub' 'ai1' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (2.07ns)   --->   "%cr0 = add i16 %d_real_read_2, i16 %c_real_read_2" [FFT32_check.cpp:28]   --->   Operation 14 'add' 'cr0' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (2.07ns)   --->   "%ci0 = add i16 %d_imag_read_2, i16 %c_imag_read_2" [FFT32_check.cpp:29]   --->   Operation 15 'add' 'ci0' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (2.07ns)   --->   "%cr1 = sub i16 %c_real_read_2, i16 %d_real_read_2" [FFT32_check.cpp:30]   --->   Operation 16 'sub' 'cr1' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (2.07ns)   --->   "%ci1 = sub i16 %c_imag_read_2, i16 %d_imag_read_2" [FFT32_check.cpp:31]   --->   Operation 17 'sub' 'ci1' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (2.07ns)   --->   "%add_ln34 = add i16 %cr0, i16 %ar0" [FFT32_check.cpp:34]   --->   Operation 18 'add' 'add_ln34' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (2.07ns)   --->   "%add_ln34_2 = add i16 %ci0, i16 %ai0" [FFT32_check.cpp:34]   --->   Operation 19 'add' 'add_ln34_2' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (2.07ns)   --->   "%add_ln35 = add i16 %ci1, i16 %ar1" [FFT32_check.cpp:35]   --->   Operation 20 'add' 'add_ln35' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (2.07ns)   --->   "%sub_ln35 = sub i16 %ai1, i16 %cr1" [FFT32_check.cpp:35]   --->   Operation 21 'sub' 'sub_ln35' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (2.07ns)   --->   "%sub_ln36 = sub i16 %ar0, i16 %cr0" [FFT32_check.cpp:36]   --->   Operation 22 'sub' 'sub_ln36' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (2.07ns)   --->   "%sub_ln36_2 = sub i16 %ai0, i16 %ci0" [FFT32_check.cpp:36]   --->   Operation 23 'sub' 'sub_ln36_2' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (2.07ns)   --->   "%sub_ln37 = sub i16 %ar1, i16 %ci1" [FFT32_check.cpp:37]   --->   Operation 24 'sub' 'sub_ln37' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (2.07ns)   --->   "%add_ln37 = add i16 %cr1, i16 %ai1" [FFT32_check.cpp:37]   --->   Operation 25 'add' 'add_ln37' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%mrv = insertvalue i128 <undef>, i16 %add_ln34" [FFT32_check.cpp:38]   --->   Operation 26 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i128 %mrv, i16 %add_ln34_2" [FFT32_check.cpp:38]   --->   Operation 27 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i128 %mrv_1, i16 %add_ln35" [FFT32_check.cpp:38]   --->   Operation 28 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i128 %mrv_2, i16 %sub_ln35" [FFT32_check.cpp:38]   --->   Operation 29 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue i128 %mrv_3, i16 %sub_ln36" [FFT32_check.cpp:38]   --->   Operation 30 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%mrv_5 = insertvalue i128 %mrv_4, i16 %sub_ln36_2" [FFT32_check.cpp:38]   --->   Operation 31 'insertvalue' 'mrv_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%mrv_6 = insertvalue i128 %mrv_5, i16 %sub_ln37" [FFT32_check.cpp:38]   --->   Operation 32 'insertvalue' 'mrv_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%mrv_7 = insertvalue i128 %mrv_6, i16 %add_ln37" [FFT32_check.cpp:38]   --->   Operation 33 'insertvalue' 'mrv_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%ret_ln38 = ret i128 %mrv_7" [FFT32_check.cpp:38]   --->   Operation 34 'ret' 'ret_ln38' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.154ns
The critical path consists of the following:
	wire read operation ('d.real', FFT32_check.cpp:16) on port 'd_real_read' (FFT32_check.cpp:16) [10]  (0.000 ns)
	'add' operation ('cr0', FFT32_check.cpp:28) [21]  (2.077 ns)
	'add' operation ('a.real', FFT32_check.cpp:34) [25]  (2.077 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
