-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft32_generic_sincos_16_4_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_val : IN STD_LOGIC_VECTOR (13 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of fft32_generic_sincos_16_4_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv35_145F30 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000101000101111100110000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1921F : STD_LOGIC_VECTOR (17 downto 0) := "011001001000011111";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv18_DBC1 : STD_LOGIC_VECTOR (17 downto 0) := "001101101111000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal inabs_fu_82_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal inabs_reg_250 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln68_fu_88_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln68_reg_255 : STD_LOGIC_VECTOR (12 downto 0);
    signal k_reg_260 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln251_fu_114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln251_reg_271 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal z_fu_168_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal z_reg_281 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_start : STD_LOGIC;
    signal grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_done : STD_LOGIC;
    signal grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_idle : STD_LOGIC;
    signal grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_ready : STD_LOGIC;
    signal grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_p_out : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_p_out_ap_vld : STD_LOGIC;
    signal grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_p_out1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_p_out1_ap_vld : STD_LOGIC;
    signal sub_ln280_fu_183_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_phi_mux_outcos_0_in_in_phi_fu_67_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_loc_fu_54 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_loc2_fu_50 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln64_fu_95_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln64_fu_95_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln64_fu_95_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_228_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_fu_126_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln68_1_fu_135_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1_fu_145_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln254_fu_139_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_2_fu_158_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln254_fu_154_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1_fu_200_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln292_fu_210_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_228_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_228_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_228_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal grp_fu_228_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln64_fu_95_p00 : STD_LOGIC_VECTOR (34 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fft32_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        z : IN STD_LOGIC_VECTOR (16 downto 0);
        p_out : OUT STD_LOGIC_VECTOR (16 downto 0);
        p_out_ap_vld : OUT STD_LOGIC;
        p_out1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        p_out1_ap_vld : OUT STD_LOGIC );
    end component;


    component fft32_mul_14ns_22ns_35_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;


    component fft32_mac_muladd_2ns_16ns_18ns_18_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73 : component fft32_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_start,
        ap_done => grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_done,
        ap_idle => grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_idle,
        ap_ready => grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_ready,
        z => z_reg_281,
        p_out => grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_p_out,
        p_out_ap_vld => grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_p_out_ap_vld,
        p_out1 => grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_p_out1,
        p_out1_ap_vld => grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_p_out1_ap_vld);

    mul_14ns_22ns_35_1_1_U70 : component fft32_mul_14ns_22ns_35_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 22,
        dout_WIDTH => 35)
    port map (
        din0 => mul_ln64_fu_95_p0,
        din1 => mul_ln64_fu_95_p1,
        dout => mul_ln64_fu_95_p2);

    mac_muladd_2ns_16ns_18ns_18_4_1_U71 : component fft32_mac_muladd_2ns_16ns_18ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 2,
        din1_WIDTH => 16,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_228_p0,
        din1 => grp_fu_228_p1,
        din2 => grp_fu_228_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_228_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv14_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_return_0_preg <= sub_ln292_fu_210_p2;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv14_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_return_1_preg <= ap_phi_mux_outcos_0_in_in_phi_fu_67_p4(16 downto 3);
                end if; 
            end if;
        end if;
    end process;


    grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_ready = ap_const_logic_1)) then 
                    grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln251_reg_271 <= icmp_ln251_fu_114_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                inabs_reg_250 <= inabs_fu_82_p2;
                trunc_ln68_reg_255 <= trunc_ln68_fu_88_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                k_reg_260 <= mul_ln64_fu_95_p2(34 downto 33);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_p_out1_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                p_loc2_fu_50 <= grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_p_out1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_p_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                p_loc_fu_54 <= grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_p_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                z_reg_281 <= z_fu_168_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_done, ap_CS_fsm_state7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_done)
    begin
        if ((grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_outcos_0_in_in_phi_fu_67_p4_assign_proc : process(icmp_ln251_reg_271, sub_ln280_fu_183_p2, ap_CS_fsm_state8, p_loc2_fu_50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
            if ((icmp_ln251_reg_271 = ap_const_lv1_0)) then 
                ap_phi_mux_outcos_0_in_in_phi_fu_67_p4 <= p_loc2_fu_50;
            elsif ((icmp_ln251_reg_271 = ap_const_lv1_1)) then 
                ap_phi_mux_outcos_0_in_in_phi_fu_67_p4 <= sub_ln280_fu_183_p2;
            else 
                ap_phi_mux_outcos_0_in_in_phi_fu_67_p4 <= "XXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_outcos_0_in_in_phi_fu_67_p4 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_CS_fsm_state8, sub_ln292_fu_210_p2, ap_return_0_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_return_0 <= sub_ln292_fu_210_p2;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_phi_mux_outcos_0_in_in_phi_fu_67_p4, ap_CS_fsm_state8, ap_return_1_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_return_1 <= ap_phi_mux_outcos_0_in_in_phi_fu_67_p4(16 downto 3);
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;

    grp_fu_228_p0 <= grp_fu_228_p00(2 - 1 downto 0);
    grp_fu_228_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_reg_260),18));
    grp_fu_228_p1 <= ap_const_lv18_DBC1(16 - 1 downto 0);
    grp_fu_228_p2 <= (trunc_ln68_reg_255 & ap_const_lv5_0);
    grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_start <= grp_generic_sincos_16_4_Pipeline_VITIS_LOOP_87_1_fu_73_ap_start_reg;
    icmp_ln251_fu_114_p2 <= "1" when (k_reg_260 = ap_const_lv2_1) else "0";
    inabs_fu_82_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(in_val));
    mul_ln64_fu_95_p0 <= mul_ln64_fu_95_p00(14 - 1 downto 0);
    mul_ln64_fu_95_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inabs_reg_250),35));
    mul_ln64_fu_95_p1 <= ap_const_lv35_145F30(22 - 1 downto 0);
    r_fu_126_p4 <= grp_fu_228_p3(17 downto 1);
    sub_ln254_fu_139_p2 <= std_logic_vector(unsigned(ap_const_lv18_1921F) - unsigned(zext_ln68_1_fu_135_p1));
    sub_ln280_fu_183_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(p_loc2_fu_50));
    sub_ln292_fu_210_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(trunc_ln1_fu_200_p4));
    tmp_1_fu_145_p4 <= grp_fu_228_p3(17 downto 2);
    tmp_2_fu_158_p4 <= sub_ln254_fu_139_p2(17 downto 1);
    trunc_ln1_fu_200_p4 <= p_loc_fu_54(16 downto 3);
    trunc_ln68_fu_88_p1 <= inabs_fu_82_p2(13 - 1 downto 0);
    z_fu_168_p3 <= 
        tmp_2_fu_158_p4 when (icmp_ln251_reg_271(0) = '1') else 
        zext_ln254_fu_154_p1;
    zext_ln254_fu_154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_145_p4),17));
    zext_ln68_1_fu_135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_126_p4),18));
end behav;
